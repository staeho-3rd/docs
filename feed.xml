<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>3rdeyesys</title>
        <description>써드아이시스템(3rdeyesys) 기술문서 사이트입니다 - Ncloud 프리미엄 파트너</description>
        <link>https://docs.3rdeyesys.com/</link>
        <atom:link href="https://docs.3rdeyesys.com/feed.xml" rel="self" type="application/rss+xml"/>
        <pubDate>Thu, 10 Feb 2022 13:20:01 +0900</pubDate>
        <lastBuildDate>Thu, 10 Feb 2022 13:20:01 +0900</lastBuildDate>
        <generator>Jekyll v4.2.1</generator>
        
        
        <item>
            <title>CentOS에서 NginX 설치, 설정하는 방법</title>
            <description>## 개요
네이버 클라우드 CentOS 서버에 NginX를 Package로 설치하고 기본 설정을 하는 방법에 대한 내용을 정리해보겠습니다.  
사용한 서버는 CentOS 7.8 입니다.

## yum 유틸리티 설치
yum으로 NginX를 설치하기 전에 yum-utils를 먼저 설치합니다. 이미 설치 되어 있을 경우에는 아래와 같이 설치되어 있다는 메시지가 출력됩니다.

``` bash
~# yum install yum-utils
```
{% include image.html file=&quot;compute/lemp/ncloud_server_nginx_install_setting_guide_centos_01.png&quot; width=&quot;770&quot; alt=&quot;Ncloud CentOS에서 NginX 설치, 설정하는 방법&quot; caption=&quot;&quot; %}


## Repository 설정
NginX package를 다운 받아 설치하기 위해서는 Repository를 설정해야 합니다. 
Repository 디렉토리에 nginx.repo 파일을 만들고 아래와 같은 내용을 입력합니다.

``` bash
~# vi /etc/yum.repos.d/nginx.repo
```

``` bash
[nginx-stable]
name=nginx stable repo
baseurl=http://nginx.org/packages/centos/$releasever/$basearch/
gpgcheck=1
enabled=1
gpgkey=https://nginx.org/keys/nginx_signing.key
module_hotfixes=true

[nginx-mainline]
name=nginx mainline repo
baseurl=http://nginx.org/packages/mainline/centos/$releasever/$basearch/
gpgcheck=1
enabled=0
gpgkey=https://nginx.org/keys/nginx_signing.key
module_hotfixes=true
```


{% include callout.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;NginX는 stable, mainline 두가지 버전이 있습니다. NginX의 공식 설명에 따르면 버그 수정이나 보안 패치 등은 항상 mainline 버전에 먼저 적용되기 때문에 mainline을 사용하는 것을 추천한다고 합니다. 
stable 버전을 사용하는 주된 경우는 third-party 모듈을 사용하고 있어서 신규 버전에서 호환성 문제가 발생할 가능성이 걱정될 때라고 합니다.&quot; %}

{% include image.html file=&quot;compute/lemp/ncloud_server_nginx_install_setting_guide_centos_02.png&quot; width=&quot;770&quot; alt=&quot;Ncloud CentOS에서 NginX 설치, 설정하는 방법&quot; caption=&quot;&quot; %}


## 버전 선택
stable, mainline 두가지 버전 중에서 기본은 stable 버전입니다.  
stable 버전을 설치할 경우에는 다음 명령어는 건너띄어도 되고, mainline 버전을 설치하기 위해서는 아래 명령어로 설정을 변경해주어야 합니다.

``` bash
~# yum-config-manager --enable nginx-mainline
```

{% include image.html file=&quot;compute/lemp/ncloud_server_nginx_install_setting_guide_centos_03.png&quot; width=&quot;770&quot; alt=&quot;Ncloud CentOS에서 NginX 설치, 설정하는 방법&quot; caption=&quot;&quot; %}


## NginX 설치
설정을 마쳤으면 yum으로 NginX를 설치합니다.
``` bash
~# yum -y install nginx
```

{% include image.html file=&quot;compute/lemp/ncloud_server_nginx_install_setting_guide_centos_04.png&quot; width=&quot;770&quot; alt=&quot;Ncloud CentOS에서 NginX 설치, 설정하는 방법&quot; caption=&quot;&quot; %}



## 디렉토리 설정
다음으로 홈으로 사용할 디렉토리를 생성하고, 해당 디렉토리의 소유권을 설정하겠습니다.  
그리고, NginX가 정상 작동하는지 확인해보기 위해 설치시에 포함된 index.html을 홈 디렉토리로 복사합니다.

``` bash
~# mkdir -p /ncp/data/www
~# chown -R nginx:nginx /ncp/data/www
~# cp /usr/share/nginx/html/index.html /ncp/data/www/index.html
~# ls -al /ncp/data/www
```
{% include image.html file=&quot;compute/lemp/ncloud_server_nginx_install_setting_guide_centos_05.png&quot; width=&quot;770&quot; alt=&quot;Ncloud CentOS에서 NginX 설치, 설정하는 방법&quot; caption=&quot;&quot; %}



## 환경 설정
주로 변경할 환경 설정 파일은 /etc/nginx/conf.d/default.conf 입니다.

``` bash
~# vi /etc/nginx/conf.d/default.conf
```
&lt;br /&gt;
### Port와 Server Name 설정
80이 아닌 다른 Port를 사용할 경우나 도메인을 설정하게 될 경우 2, 3 라인에 있는 아래 항목들을 수정하면 됩니다.

``` bash
server_name  localhost;
server_name  127.0.0.1;
```

{% include image.html file=&quot;compute/lemp/ncloud_server_nginx_install_setting_guide_centos_06.png&quot; width=&quot;770&quot; alt=&quot;Ncloud CentOS에서 NginX 설치, 설정하는 방법&quot; caption=&quot;&quot; %}


### 홈 디렉토리, 기본 문서 설정
앞에서 만들었던 홈 디렉토리 경로를 설정하고 기본 문서를 지정하는 곳입니다. 

``` bash
# 변경 전
    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

# 변경 후
    root   /ncp/data/www;
    index  index.html index.htm;

    location / {
        try_files $uri $uri/ = 404;
    }
```
{% include image.html file=&quot;compute/lemp/ncloud_server_nginx_install_setting_guide_centos_07.png&quot; width=&quot;770&quot; alt=&quot;Ncloud CentOS에서 NginX 설치, 설정하는 방법&quot; caption=&quot;&quot; %}


{% include image.html file=&quot;compute/lemp/ncloud_server_nginx_install_setting_guide_centos_08.png&quot; width=&quot;770&quot; alt=&quot;Ncloud CentOS에서 NginX 설치, 설정하는 방법&quot; caption=&quot;&quot; %}


### error 페이지 설정
404, 500 등의 error 페이지를 설정할 경우 아래 내용들을 수정하면 됩니다.

``` bash
# 변경 전
    #error_page  404              /404.html;

    location = /50x.html {
        root   /usr/share/nginx/html;
    }

# 변경 후
    error_page  404              /404.html;

    location = /50x.html {
        root   /ncp/data/www;
    }
```

{% include image.html file=&quot;compute/lemp/ncloud_server_nginx_install_setting_guide_centos_09.png&quot; width=&quot;770&quot; alt=&quot;Ncloud CentOS에서 NginX 설치, 설정하는 방법&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;compute/lemp/ncloud_server_nginx_install_setting_guide_centos_10.png&quot; width=&quot;770&quot; alt=&quot;Ncloud CentOS에서 NginX 설치, 설정하는 방법&quot; caption=&quot;&quot; %}


### .htaccess 파일 접근 금지 설정
.htaccess 파일에 대한 접근 금지를 설정할 경우 아래 내용을 주석 해제하면 됩니다.

``` bash
# 변경 전
    #location ~ /\.ht {
    #    deny  all;
    #}

# 변경 후
    location ~ /\.ht {
        deny  all;
    }
```

{% include image.html file=&quot;compute/lemp/ncloud_server_nginx_install_setting_guide_centos_11.png&quot; width=&quot;770&quot; alt=&quot;Ncloud CentOS에서 NginX 설치, 설정하는 방법&quot; caption=&quot;&quot; %}


{% include image.html file=&quot;compute/lemp/ncloud_server_nginx_install_setting_guide_centos_12.png&quot; width=&quot;770&quot; alt=&quot;Ncloud CentOS에서 NginX 설치, 설정하는 방법&quot; caption=&quot;&quot; %}


## NginX 실행
설정을 모두 마쳤으면 NginX를 시작하고 상태를 확인합니다.

``` bash
~# systemctl start nginx
~# systemctl status nginx
```
{% include image.html file=&quot;compute/lemp/ncloud_server_nginx_install_setting_guide_centos_13.png&quot; width=&quot;770&quot; alt=&quot;Ncloud CentOS에서 NginX 설치, 설정하는 방법&quot; caption=&quot;&quot; %}


### 사이트 접속
NginX가 정상 작동하면 아래와 같이 서버 접속 화면을 확인할 수 있습니다.

{% include image.html file=&quot;compute/lemp/ncloud_server_nginx_install_setting_guide_centos_14.png&quot; width=&quot;600&quot; alt=&quot;Ncloud CentOS에서 NginX 설치, 설정하는 방법&quot; caption=&quot;&quot; %}


## 참고 URL
1.  NginX Linux packages 설치 가이드
	- &lt;a href=&quot;http://nginx.org/en/linux_packages.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;http://nginx.org/en/linux_packages.html&lt;/a&gt;
</description>
            <pubDate></pubDate>
            <link>https://docs.3rdeyesys.com/compute/ncloud_compute_lemp_nginx_install_setting_centos_guide.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/compute/ncloud_compute_lemp_nginx_install_setting_centos_guide.html</guid>
            
            <category>centos</category>
            
            <category>lemp</category>
            
            <category>nginx</category>
            
            <category>install</category>
            
            
        </item>
        
        <item>
            <title>서버 모니터링 서비스 Monitoring 설정 가이드</title>
            <description>## 개요
네이버 클라우드 Classic 환경에서 서버 모니터링을 설정하는 가이드입니다.  
Classic에서는 Monitoring 서비스와 Cloud Insite(Monitoring) 서비스 이렇게 2가지 서비스가 있는데 여기서는 Monitoring 서비스를 설정하는 방법에 대해 정리해보겠습니다.


### 기본 모니터링 vs 상세 모니터링
{% include callout.html type=&quot;info&quot; level=&quot;1&quot; content=&quot;**기본 모니터링** : 네이버 클라우드에서 서버를 생성하면 별다른 설정을 하지 않아도 CPU, Memory 사용 등의 기본적인 항목들의 데이터를 확인할 수 있는데 이를 기본 모니터링이라고 하며 5분 단위의 데이터를 확인할 수 있습니다.
  확인 가능한 데이터는 [CPU Used], [Memory Used (except cache/buffer)], [Disk Used], [Swap Used], [Network In (bps)], [Network Out (bps)], [Disk Read (bytes)], [Disk Write (bytes)] 입니다.&quot; %}

{% include callout.html type=&quot;success&quot; level=&quot;1&quot; content=&quot;**상세 모니터링** : 기본 모니터링보다 훨씬 많고 상세한 데이터를 확인하고, 상태 감시와 통보 알람 설정을 통해 지정한 수치 이상의 상태가 되면 문자나 메일로 통보 받을 수 있는 모니터링 서비스이며, 1분 단위의 데이터를 확인할 수 있습니다. 
  네이버 클라우드 [Console] - [Monitoring] 서비스가 바로 [상세 모니터링]입니다. 또한 [Monitoring] 서비스에서는 Auto Scaling 그룹에 대한 이벤트 설정도 할 수 있습니다.&quot; %}


## 기본 모니터링
아래와 같이 서버 리스트에서 모니터링할 서버를 선택하고 위에 있는 [모니터링] 버튼을 클릭합니다.

{% include image.html file=&quot;management/ncp_management_monitoring_guide_01.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud Classic 환경의 서버 모니터링 서비스 Monitoring 설정 가이드&quot; caption=&quot;&quot; %}

기본 모니터링에서는 5분 주기의 데이터를 확인할 수 있고, 날짜와 기간을 선택해서 데이터를 확인할 수 있습니다.

{% include image.html file=&quot;management/ncp_management_monitoring_guide_02.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud Classic 환경의 서버 모니터링 서비스 Monitoring 설정 가이드&quot; caption=&quot;&quot; %}


## 상세 모니터링
[Monitoring] 서비스 즉, 상세 모니터링 서비스는 별도로 설정이 필요한데 설정하는 방법은 아래와 같이 기본 모니터링 화면에서 [상세 모니터링 설정] 링크를 클릭하거나, 
서버 리스트에서 [서버 관리 및 설정 변경] 메뉴 - [상세 모니터링 설정 변경] 메뉴를 클릭하면 됩니다.

{% include image.html file=&quot;management/ncp_management_monitoring_guide_03.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud Classic 환경의 서버 모니터링 서비스 Monitoring 설정 가이드&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;management/ncp_management_monitoring_guide_04.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud Classic 환경의 서버 모니터링 서비스 Monitoring 설정 가이드&quot; caption=&quot;&quot; %}

[상세 모니터링] 신청화면입니다. 특별한 설정이 필요한 것은 아니므로 신청 화면에서 [예] 버튼을 클릭합니다.

{% include image.html file=&quot;management/ncp_management_monitoring_guide_05.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud Classic 환경의 서버 모니터링 서비스 Monitoring 설정 가이드&quot; caption=&quot;&quot; %}

[상세 모니터링] 신청이 끝나면 바로 [Monitoring] - [Notification Recipient] 즉, 이벤트 통보 대상자 화면으로 넘어갑니다.  여기서는 모니터링 대상인 서버에서 이벤트가 발생했을 때 연락이 가도록 대상자를 등록하게 됩니다.  
기본으로 계정 사용자 정보가 등록되어 있는데, 혹시 등록되지 않았을 경우에는 [대상자 추가] 버튼을 클릭해서 통보 대상자를 등록합니다.

{% include image.html file=&quot;management/ncp_management_monitoring_guide_06.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud Classic 환경의 서버 모니터링 서비스 Monitoring 설정 가이드&quot; caption=&quot;&quot; %}

## 대시보드

### 통합 대시보드
[Monitoring] - [Integrated Dashboard] 즉, 통합 대시보드 메뉴로 이동합니다.  
여기서는 일별 이벤트 발생 횟수와 히스토리, 그리고, 각 모니터링 항목별로 상위 5개의 서버 정보를 통합해서 표시합니다. 

{% include image.html file=&quot;management/ncp_management_monitoring_guide_07.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud Classic 환경의 서버 모니터링 서비스 Monitoring 설정 가이드&quot; caption=&quot;&quot; %}

### 서버 대시보드
[Monitoring] - [Dashboard] - [Server Dashboard]에서는 전체 서버들의 상세한 모니터링 데이터를 리스트로 확인할 수 있습니다.

{% include image.html file=&quot;management/ncp_management_monitoring_guide_08.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud Classic 환경의 서버 모니터링 서비스 Monitoring 설정 가이드&quot; caption=&quot;&quot; %}


좀 더 자세한 정보를 확인하고 싶으면 서버 리스트에서 원하는 서버를 선택합니다.

{% include image.html file=&quot;management/ncp_management_monitoring_guide_09.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud Classic 환경의 서버 모니터링 서비스 Monitoring 설정 가이드&quot; caption=&quot;&quot; %}

서버를 선택하면 아래와 같이 모니터링 데이터를 차트로 확인할 수 있습니다.


{% include image.html file=&quot;management/ncp_management_monitoring_guide_10.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud Classic 환경의 서버 모니터링 서비스 Monitoring 설정 가이드&quot; caption=&quot;&quot; %}

그리고 서버 Process와 File System 사용 정보도 상세하게 확인할 수 있습니다.

{% include image.html file=&quot;management/ncp_management_monitoring_guide_11.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud Classic 환경의 서버 모니터링 서비스 Monitoring 설정 가이드&quot; caption=&quot;&quot; %}

## 감시-통보 설정
Monitoring 시스템에서 수집하는 성능 Item 중 사용자가 지정한 Item이 임계치 값을 벗어난 경우에 Event가 발생합니다. 
Event를 발생 하게 하는 조건을 감시설정이라 하며 해당 Event를 Mail or SMS로 수신 받는 설정을 통보설정이라고 합니다.

[Monitoring] - [Configuration] - [New Observation] 메뉴에서 우선 감시설정에 등록하고자 하는 서버를 먼저 선택하고 하단의 감시설정 버튼을 클릭합니다.

{% include image.html file=&quot;management/ncp_management_monitoring_guide_12.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud Classic 환경의 서버 모니터링 서비스 Monitoring 설정 가이드&quot; caption=&quot;&quot; %}


다음으로 감시할 항목을 설정합니다. CPU, Memory 등 원하는 분류와 항목을 선택하고 임계치 등의 수치를 입력 후 추가 버튼을 클릭합니다.  
또한, 미리 Template을 등록해 두면 이후에 여러 서버들에 설정을 쉽게 적용할 수 있습니다.

### 분류 항목별 주의 사항
- 프로세스: 상세 입력칸에 프로세스명을 입력할 때는 정규 표현식으로 입력해야 합니다.
- 파일 시스템:  상세 입력칸에 경로 입력 시 Linux의 경우 &apos;/&apos; 경로로 입력하고, Windows의 경우 &apos;C:, D:&apos; 등의 경로로 반드시 대문자로 입력합니다.

{% include image.html file=&quot;management/ncp_management_monitoring_guide_13.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud Classic 환경의 서버 모니터링 서비스 Monitoring 설정 가이드&quot; caption=&quot;&quot; %}

{% include warning.html title=&quot;주의사항&quot; content=&quot;감시 통보설정에서 중요한 것은 **지속시간**입니다. 위 설정화면을 예로 설명하자면 CPU 사용율이 90% 이상인 상태가 5분 이상 지속되면 통보되도록 설정된 상태입니다. 
즉, 중간에 한번이라도 90% 미만으로 내려가면, 예를 들어 4분 50초 동안 90% 이상을 유지하다 85%로 내려간 경우라면 통보가 되지 않습니다. 
&lt;br /&gt;혹시 통보 알람을 테스트 하고 싶을 경우에는 지정한 상태가 5분 이상 지속되는 상황을 연출해서 테스트 해보셔야 합니다.&quot; %}


그 다음은 통보 받을 대상자와 통보 방법을 선택하고 [추가] 버튼을 클릭합니다. 통보 대상자가 리스트에 없을 경우 위쪽에 있는 [통보대상관리] 버튼을 클릭해서 대상자를 등록한 후에 다시 추가합니다.

{% include image.html file=&quot;management/ncp_management_monitoring_guide_14.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud Classic 환경의 서버 모니터링 서비스 Monitoring 설정 가이드&quot; caption=&quot;&quot; %}


마지막으로 지금까지 설정한 내용들을 다시 한번 확인 한 후에 [최종 확인] 버튼을 클릭합니다.

{% include image.html file=&quot;management/ncp_management_monitoring_guide_15.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud Classic 환경의 서버 모니터링 서비스 Monitoring 설정 가이드&quot; caption=&quot;&quot; %}


## 통보 알람 중지
서버 점검 등을 진행할 때는 통보 알람 기능을 중지 시켜두면 불필요한 알람을 받을 필요가 없어서 편리합니다.
[Monitoring] - [Configuration] - [Notification Stop] 메뉴에서 서버를 선택하고 [알람중지] 버튼을 클릭합니다.

{% include image.html file=&quot;management/ncp_management_monitoring_guide_16.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud Classic 환경의 서버 모니터링 서비스 Monitoring 설정 가이드&quot; caption=&quot;&quot; %}

알람 중지 팝업 화면에서 목적과 기간 등을 선택해서 적용합니다.

{% include image.html file=&quot;management/ncp_management_monitoring_guide_17.jpg&quot; width=&quot;700&quot; alt=&quot;Ncloud Classic 환경의 서버 모니터링 서비스 Monitoring 설정 가이드&quot; caption=&quot;&quot; %}


## 정보 수집 오류
간혹 서버 모니터링 성능 정보 수집에 오류가 발생하는 경우가 있습니다.  
그 중에서 Classic 환경의 Windows 서버에서 오류가 발생했을 때의 해결 방법을 아래 문서에 따로 정리해두었습니다.

- &lt;a href=&quot;/management/ncloud_management_monitoring_win_perf_data_error_troubleshoot.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;Windows 서버 모니터링 성능 정보 수집 오류 해결 방법&lt;/a&gt;


## 참고 URL
1.  상세 모니터링 사용 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/ko/management-management-1-1&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/ko/management-management-1-1&lt;/a&gt;
</description>
            <pubDate></pubDate>
            <link>https://docs.3rdeyesys.com/management/ncloud_management_classic_monitoring_guide.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/management/ncloud_management_classic_monitoring_guide.html</guid>
            
            <category>classic</category>
            
            <category>monitoring</category>
            
            
        </item>
        
        <item>
            <title>X-Forwarded-For를 이용해 Proxy, Load Balancer 환경에서 Client IP 기록하기</title>
            <description>## 개요
X-Forwarded-For (XFF) 는 HTTP Header 중 하나로 Load Balancer(로드밸런서)나 Proxy Server를 통해 웹서버에 접속하는 Client의 IP 주소를 식별하는 표준 헤더입니다.  
웹서버나 WAS 앞쪽에 Load Balancer 혹은 Proxy Server 등이 위치하게 된다면 서버 접근 로그에는 Client IP가 아닌 Load Balancer 혹은 Proxy Server의 IP 주소가 기록됩니다. 
이때 웹 어플리케이션에서 X-Forwarded-For 헤더를 이용하면 Client IP를 서버 접근 로그에 남길 수 있습니다.  

여기서는 Load Balancer와 연동된 CentOS 와 Ubuntu의 Apache 웹서버 환경에서 X-Forwarded-For 를 이용하여 Apache access_log에 Clinet의 IP를 저장하는 과정을 살펴보겠습니다.


## 테스트 환경
테스트는 CentOS, Ubuntu OS가 각각 설치된 2대의 서버를 Load Balancer와 연동한 후 Cloud Log Analytics에서 Apache access_log를  수집해 IP 주소를 확인하는 방식으로 진행하겠습니다.

### Network 환경
- VPC 대역 : 172.16.0.0/16
- Subnet 대역 (Server) : 172.16.**10**.0/24
- Sbunet 대역 (Load Balancer) : 172.16.**20**.0/24

### Server 환경
- xxf-test-1 : CentOS 7.8
- xxf-test-2 : Ubuntu 18.04


### 테스트 서버
위 서버 환경에서 정리한 대로 CentOS, Ubuntu 2대의 서버를 준비했습니다.

- VPC 환경에서 서버 생성하는 방법 : &lt;a href=&quot;/compute/ncloud_compute_server_vpc_create.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/compute/ncloud_compute_server_vpc_create.html&lt;/a&gt;

{% include image.html file=&quot;compute/ncloud_server_x_forwarded_for_client_ip_logging_guide_01.png&quot; width=&quot;770&quot; alt=&quot;Ncloud에서 X-Forwarded-For를 이용해 Proxy, Load Balancer 환경에서 Client IP를 Apache access_log에 기록하는 방법&quot; caption=&quot;&quot; %}

로드밸런서도 마찬가지로 준비하고, 서버와 연동까지 완료했습니다.

- VPC 환경에서 Application Load Balancer 생성하는 방법 : &lt;a href=&quot;/networking/ncloud_networking_load_balancer_application_lb.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/networking/ncloud_networking_load_balancer_application_lb.html&lt;/a&gt;

{% include image.html file=&quot;compute/ncloud_server_x_forwarded_for_client_ip_logging_guide_02.png&quot; width=&quot;770&quot; alt=&quot;Ncloud에서 X-Forwarded-For를 이용해 Proxy, Load Balancer 환경에서 Client IP를 Apache access_log에 기록하는 방법&quot; caption=&quot;&quot; %}

## 설정 전 테스트
우선, **X-Forwarded-For (XFF)** 설정을 하기 전에 어떻게 기록이 남는지 확인해보겠습니다.  
아래와 같이 Load Balancer 주소로 접속해서 2대의 서버에 각각 접근하도록 합니다.  
위에서 소개한 Application Load Balancer 생성하는 방법을 그대로 따라하면 아래와 같은 메시지를 확인할 수 있습니다.

{% include image.html file=&quot;compute/ncloud_server_x_forwarded_for_client_ip_logging_guide_11-1.png&quot; width=&quot;560&quot; alt=&quot;Ncloud에서 X-Forwarded-For를 이용해 Proxy, Load Balancer 환경에서 Client IP를 Apache access_log에 기록하는 방법&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;compute/ncloud_server_x_forwarded_for_client_ip_logging_guide_11-2.png&quot; width=&quot;560&quot; alt=&quot;Ncloud에서 X-Forwarded-For를 이용해 Proxy, Load Balancer 환경에서 Client IP를 Apache access_log에 기록하는 방법&quot; caption=&quot;&quot; %}

### Apache 접속 로그 확인
Apache 접속 로그 파일은 아래의 위치에 존재하지만, 저희는 네이버 클라우드 (Ncloud)의 상품 중 하나인 **Cloud Log Analytics**에서 로그를 수집해서 확인해보겠습니다. 
- CentOS : /var/log/httpd/access_log
- Ubuntu : /var/log/apache2/access.log

- Cloud Log Analytics 설정 가이드 : &lt;a href=&quot;/analytics/ncloud_analytics_cloud_log_analytics_guide.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/analytics/ncloud_analytics_cloud_log_analytics_guide.html&lt;/a&gt;

Cloud Log Analytics에서 수집한 로그를 확인해보면 위에서 설정했던 **Load Balancer의 IP 대역 (172.16.20.xx)**이 기록된 것을 확인할 수 있습니다.

{% include image.html file=&quot;compute/ncloud_server_x_forwarded_for_client_ip_logging_guide_03.png&quot; width=&quot;770&quot; alt=&quot;Ncloud에서 X-Forwarded-For를 이용해 Proxy, Load Balancer 환경에서 Client IP를 Apache access_log에 기록하는 방법&quot; caption=&quot;&quot; %}

## CentOS 설정
이제 실제 Client IP가 기록 되도록 설정을 변경해보겠습니다.  
우선 CentOS에서는 **httpd.conf** 파일만 수정하면 됩니다.

``` bash
~# vi /etc/httpd/conf/httpd.conf

# vi Line Number 표시하기
:set number
```

httpd.conf 파일 196번째 라인의 LogFormat 항목에서 **%h** 를 **%{X-Forwarded-For}i** 로 수정합니다.

### httpd.conf 수정 전
``` bash   
196   LogFormat &quot;%h %l %u %t \&quot;%r\&quot; %&gt;s %b \&quot;%{Referer}i\&quot; \&quot;%{User-Agent}i\&quot;&quot; combined
```
{% include image.html file=&quot;compute/ncloud_server_x_forwarded_for_client_ip_logging_guide_04.png&quot; width=&quot;770&quot; alt=&quot;Ncloud에서 X-Forwarded-For를 이용해 Proxy, Load Balancer 환경에서 Client IP를 Apache access_log에 기록하는 방법&quot; caption=&quot;&quot; %}

### httpd.conf 수정 후  
```bash
196   LogFormat &quot;%{X-Forwarded-For}i %l %u %t \&quot;%r\&quot; %&gt;s %b \&quot;%{Referer}i\&quot; \&quot;%{User-Agent}i\&quot;&quot; combined
```
{% include image.html file=&quot;compute/ncloud_server_x_forwarded_for_client_ip_logging_guide_05.png&quot; width=&quot;770&quot; alt=&quot;Ncloud에서 X-Forwarded-For를 이용해 Proxy, Load Balancer 환경에서 Client IP를 Apache access_log에 기록하는 방법&quot; caption=&quot;&quot; %}

### Apache 재시작
httpd.conf 파일 수정 후에 Apache를 재시작합니다. 로그 테스트는 Ubuntu까지 설정을 마친 후에 진행하겠습니다.

``` bash
~# systemctl restart httpd
```

## Ubuntu 설정
Ubuntu에서는 apache2.conf 파일을 수정하기 전에 **remoteip 모듈**을 사용하도록 설정해줘야 합니다.

### remoteip 설정
아래 명령어를 실행하면 remoteip 모듈이 활성화 됩니다.

``` bash
~# a2enmod remoteip
```
{% include image.html file=&quot;compute/ncloud_server_x_forwarded_for_client_ip_logging_guide_06.png&quot; width=&quot;770&quot; alt=&quot;Ncloud에서 X-Forwarded-For를 이용해 Proxy, Load Balancer 환경에서 Client IP를 Apache access_log에 기록하는 방법&quot; caption=&quot;&quot; %}

### remoteip.load 수정
다음으로 remoteip.load 파일을 수정해서 아래쪽에 [**RemoteIPHeader X-FORWARDED-FOR**]을 추가 합니다.

``` bash
~# vi /etc/apache2/mods-enabled/remoteip.load
```

### remoteip.load 수정 전
``` bash
LoadModule remoteip_module /usr/lib/apache2/modules/mod_remoteip.so
```
### remoteip.load 수정 후
``` bash
LoadModule remoteip_module /usr/lib/apache2/modules/mod_remoteip.so
RemoteIPHeader X-FORWARDED-FOR
```
{% include image.html file=&quot;compute/ncloud_server_x_forwarded_for_client_ip_logging_guide_07.png&quot; width=&quot;770&quot; alt=&quot;Ncloud에서 X-Forwarded-For를 이용해 Proxy, Load Balancer 환경에서 Client IP를 Apache access_log에 기록하는 방법&quot; caption=&quot;&quot; %}

### apache2.conf 수정
다음으로 **apache2.conf** 파일을 수정합니다.

``` bash
~# vi /etc/apache2/apache2.conf

# vi Line Number 표시하기
:set number
```

apache2.conf 213번째 라인의 LogFormat 부분에서 **%h** 를 **%a** 로 변경합니다. 

### apache2.conf 수정 전
``` bash
213 LogFormat &quot;%h %l %u %t \&quot;%r\&quot; %&gt;s %O \&quot;%{Referer}i\&quot; \&quot;%{User-Agent}i\&quot;&quot; combined  
```
{% include image.html file=&quot;compute/ncloud_server_x_forwarded_for_client_ip_logging_guide_08.png&quot; width=&quot;770&quot; alt=&quot;Ncloud에서 X-Forwarded-For를 이용해 Proxy, Load Balancer 환경에서 Client IP를 Apache access_log에 기록하는 방법&quot; caption=&quot;&quot; %}

### apache2.conf 수정 후
``` bash
213 LogFormat &quot;%a %l %u %t \&quot;%r\&quot; %&gt;s %O \&quot;%{Referer}i\&quot; \&quot;%{User-Agent}i\&quot;&quot; combined  
```
{% include image.html file=&quot;compute/ncloud_server_x_forwarded_for_client_ip_logging_guide_09.png&quot; width=&quot;770&quot; alt=&quot;Ncloud에서 X-Forwarded-For를 이용해 Proxy, Load Balancer 환경에서 Client IP를 Apache access_log에 기록하는 방법&quot; caption=&quot;&quot; %}

### Apache 재시작
``` bash
~# systemctl restart apache2
```

## 설정 후 테스트
위와 같이  CentOS, Ubuntu 2대 서버에서 설정을 모두 마친 후에 로드 밸런서 URL로 접속합니다.  
이후에 Cloud Log Analytics에서 로그를 확인해보면 아래와 같이 로드밸런서 IP가 아닌 실제 접속한 Client의 IP가 기록된 것을 확인할 수 있습니다.

{% include image.html file=&quot;compute/ncloud_server_x_forwarded_for_client_ip_logging_guide_10.png&quot; width=&quot;770&quot; alt=&quot;Ncloud에서 X-Forwarded-For를 이용해 Proxy, Load Balancer 환경에서 Client IP를 Apache access_log에 기록하는 방법&quot; caption=&quot;&quot; %}


## 참고 URL
1.  X-Forwarded-For 안내
	- &lt;a href=&quot;https://developer.mozilla.org/ko/docs/Web/HTTP/Headers/X-Forwarded-For&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://developer.mozilla.org/ko/docs/Web/HTTP/Headers/X-Forwarded-For&lt;/a&gt;
</description>
            <pubDate></pubDate>
            <link>https://docs.3rdeyesys.com/compute/ncloud_compute_server_x_forwarded_for_client_ip_logging_guide.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/compute/ncloud_compute_server_x_forwarded_for_client_ip_logging_guide.html</guid>
            
            <category>proxy</category>
            
            <category>load_balancer</category>
            
            <category>log</category>
            
            
        </item>
        
        <item>
            <title>ACG(Access Control Group) 가이드</title>
            <description>## 개요
ACG(Access Control Group)는 서버 간 네트워크 접근 제어 및 관리를 할 수 있는 IP/Port 기반 필터링 방화벽 서비스로 AWS에서는 비슷하게 Security Group이라는 것이 있습니다.

## 제한 사항

### VPC
- VPC당 최대 **500개**까지 ACG 생성 가능
- **NIC당 3개의 ACG**를 허용
- Inbound / Outbound 각각 **50개의 규칙** 생성 가능

### Classic
- 계정당 최대 **100개**까지 ACG를 생성 가능
- 각 ACG에는 최대 **100개**까지의 규칙을 설정할 수 있음
- 서버는 **최대 5개**의 ACG에 중복 포함될 수 있음
- 서버가 생성될 시 선택한 ACG는 변경이 불가하며, 반납 전까지 해당 ACG 규칙을 적용 받게 됨

{% include callout.html type=&quot;info&quot; level=&quot;1&quot; content=&quot;Classic 환경에서는 서버 자체에 할당되는 개념이었으나 VPC에는 NIC 즉, 네트워크 카드에 할당되는 개념이어서 VPC 환경에서는 **NIC 당 최대 3개**까지 ACG를 적용할 수 있습니다.&quot; %}

## 기본 규칙

### Default ACG
기본적으로 추가되는 ACG

- 모든 들어오는 연결(inbound traffic)을 차단함
- 모든 나가는 연결(outbound traffic)을 허용함
- Default ACG 내 속한 서버들끼리의 네트워크 양방향 통신(TCP, UDP, ICMP)이 허용됨
- 원격 접속 기본 포트 (**Linux - 22, Windows - 3389**)에 대한 TCP 허용됨

#### VPC 화면

##### Inbound (기본 설정)
{% include image.html file=&quot;security/ncp_security_acg_vpc_inbound.png&quot; width=&quot;770&quot; alt=&quot;Ncloud의 IP/Port 기반 필터링 방화벽 서비스 ACG(Access Control Group) 가이드&quot; caption=&quot;&quot; %}

{% include callout.html type=&quot;warning&quot; level=&quot;1&quot; content=&quot;기본으로 생성된 ACG에는 위처럼 22, 3389 포트에 대해 0.0.0.0/0 즉, 전체 IP에 대해 허용되어 있는데 보안을 위해 이 항목을 삭제하고 아래와 같이 지정된 IP에서만 접속하도록 수정하는 것이 좋습니다.&quot; %}

##### Inbound (권장 설정)
{% include image.html file=&quot;security/ncp_security_acg_vpc_inbound_02.png&quot; width=&quot;770&quot; alt=&quot;Ncloud의 IP/Port 기반 필터링 방화벽 서비스 ACG(Access Control Group) 가이드&quot; caption=&quot;&quot; %}

##### Outbound
{% include image.html file=&quot;security/ncp_security_acg_vpc_outbound.png&quot; width=&quot;770&quot; alt=&quot;Ncloud의 IP/Port 기반 필터링 방화벽 서비스 ACG(Access Control Group) 가이드&quot; caption=&quot;&quot; %}

#### Classic 화면 (기본 설정)
{% include image.html file=&quot;security/ncp_security_acg_classic.png&quot; width=&quot;770&quot; alt=&quot;Ncloud의 IP/Port 기반 필터링 방화벽 서비스 ACG(Access Control Group) 가이드&quot; caption=&quot;&quot; %}

{% include callout.html type=&quot;warning&quot; level=&quot;1&quot; content=&quot;기본으로 생성된 ACG에는 위처럼 22, 3389 포트에 대해 0.0.0.0/0 즉, 전체 IP에 대해 허용되어 있는데 보안을 위해 이 항목을 삭제하고 아래와 같이 지정된 IP에서만 접속하도록 수정하는 것이 좋습니다.&quot; %}

#### Classic 화면 (권장 설정)
{% include image.html file=&quot;security/ncp_security_acg_classic_02.png&quot; width=&quot;770&quot; alt=&quot;Ncloud의 IP/Port 기반 필터링 방화벽 서비스 ACG(Access Control Group) 가이드&quot; caption=&quot;&quot; %}

### Custom ACG
Default ACG 이외에 사용자가 추가하는 ACG

- 모든 inbound traffic을 차단함(규칙으로 명시되어 있지 않음)
- 모든 outbound traffic을 허용함(규칙으로 명시되어 있지 않음)


## 접근소스 설정
ACG를 설정할 때 접근 소스 항목은 보통 IP주소를 입력하게 됩니다. 
하지만 특수한 경우로 Load Balancer를 지정하거나 ACG 이름을 지정하는 경우도 있습니다. 
이 중에서 다른 ACG를 접근 소스 항목으로 지정하는 경우는 해당 ACG가 적용된 서버들이 접근할 수 있도록 규칙을 설정하는 것인데, 아래 예시를 이용해 정리해보겠습니다.

### ACG-1
- 적용서버 : SVR-1, SVR2

### ACG-2
- 적용서버 : SVR-3

### ACG-2 적용 규칙
- 프로토콜 :  TCP
- 접근소스 :  ACG-1
- 허용포트 : 80

{% include note.html content=&quot;위와 같은 경우 ACG-1이 적용된 SVR-1, SVR-2 서버에서 ACG-2가 적용된 SVR-3 서버로 80포트를 이용한 접근을 허용한다는 의미입니다.&quot; %}



## 참고 URL
&lt;a href=&quot;https://guide.ncloud-docs.com/docs/compute-compute-2-3&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/compute-compute-2-3.html&lt;/a&gt;
</description>
            <pubDate></pubDate>
            <link>https://docs.3rdeyesys.com/security/ncloud_security_acg_guide.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/security/ncloud_security_acg_guide.html</guid>
            
            <category>acg</category>
            
            <category>classic</category>
            
            <category>vpc</category>
            
            
        </item>
        
        <item>
            <title>Windows 서버 모니터링 성능 정보 수집 오류 해결 방법</title>
            <description>## 개요
Ncloud(네이버 클라우드) Monitoring 서비스를 이용해 서버 시스템 자원들(CPU, Memory 등)의 성능 정보를 수집, 모니터링할 때 간혹 성능 정보가 수집되지 않는 경우가 발생하기도 합니다. 
특히 Windows 서버의 경우 Windows 자체 성능 테이블을 참조하여 데이터를 수집하기 때문에 Windows 자체 성능 테이블에 문제가 발생할 경우 성능 정보를 수집하지 못하게 됩니다.  
여기서는 Ncloud(네이버 클라우드) Classic 환경에서 Windows 서버의 모니터링 성능 정보가 수집되지 않을 때 해결 방법을 정리해보겠습니다.

## 서버 환경
- Classic 환경
- Windows Server 2016 64bit R2 en

## 오류 상황
성능 정보가 수집되지 않을 경우 아래와 같이 Monitoring 정보에서 그래프가 특정 시점 이후로 끊겨서 표시되게 됩니다.

{% include image.html file=&quot;management/ncloud_management_monitoring_win_perf_data_error_troubleshoot_01.png&quot; width=&quot;770&quot; alt=&quot;Ncloud Windows 서버 모니터링 성능 정보 수집 오류 해결 방법&quot; caption=&quot;&quot; %}

## 서버 상태 확인

### 서버 성능 정보 상태 확인
우선 서버에 접속해서 서버의 작업 관리자 (Task Manager)를 실행, 성능(Performance)탭을 열고 CPU, Memory, Disk, Ethernet 등의 성능 정보가 제대로 표시되는지 확인합니다.

{% include image.html file=&quot;management/ncloud_management_monitoring_win_perf_data_error_troubleshoot_04.png&quot; width=&quot;770&quot; alt=&quot;Ncloud Windows 서버 모니터링 성능 정보 수집 오류 해결 방법&quot; caption=&quot;&quot; %}

### 모니터링 Agent 상태 확인
Ncloud(네이버 클라우드) 서버들에는 모니터링 정보를 수집하기 위한 Agent가 설치되는데 이 모니터링 Agent가 작동하고 있는지 확인합니다.

아래와 같이 Windows PowerShell에서 서비스를 검색합니다. 
Agent가 표시되는지 Status가 Running 상태인지 확인합니다.

``` bash
&gt; Get-Service -name *nsight*
```

{% include image.html file=&quot;management/ncloud_management_monitoring_win_perf_data_error_troubleshoot_03.png&quot; width=&quot;770&quot; alt=&quot;Ncloud Windows 서버 모니터링 성능 정보 수집 오류 해결 방법&quot; caption=&quot;&quot; %}


## 문제 해결

### 서버 성능 정보에 문제가 있는 경우
혹시 서버 성능 정보가 제대로 표시 되지 않을 경우에는 cmd 창에서 아래 명령어로 성능 정보 테이블을 복구합니다.

``` bash
&gt; lodctr /R
```
{% include image.html file=&quot;management/ncloud_management_monitoring_win_perf_data_error_troubleshoot_05.png&quot; width=&quot;770&quot; alt=&quot;Ncloud Windows 서버 모니터링 성능 정보 수집 오류 해결 방법&quot; caption=&quot;&quot; %}

### 서버 성능 정보가 정상인 경우
서버의 성능 정보가 제대로 표시되는데도 Monitoring 데이터가 제대로 수집되지 않는다면 cmd 창에서 모니터링 Agent를 다시 실행합니다.

우선 Agent를 중지 시킵니다.
``` bash
&gt; sc stop noms_nsight
```
{% include image.html file=&quot;management/ncloud_management_monitoring_win_perf_data_error_troubleshoot_07.png&quot; width=&quot;770&quot; alt=&quot;Ncloud Windows 서버 모니터링 성능 정보 수집 오류 해결 방법&quot; caption=&quot;&quot; %}

그리고 Agent를 다시 실행 시킵니다.
``` bash
&gt; sc start noms_nsight
```

{% include image.html file=&quot;management/ncloud_management_monitoring_win_perf_data_error_troubleshoot_06.png&quot; width=&quot;770&quot; alt=&quot;Ncloud Windows 서버 모니터링 성능 정보 수집 오류 해결 방법&quot; caption=&quot;&quot; %}

### Monitoring 정보 수집 복구
문제가 해결되었다면 아래와 같이 Monitoring 정보가 제대로 수집되면서 그래프가 나타나기 시작합니다.

{% include image.html file=&quot;management/ncloud_management_monitoring_win_perf_data_error_troubleshoot_02.png&quot; width=&quot;770&quot; alt=&quot;Ncloud Windows 서버 모니터링 성능 정보 수집 오류 해결 방법&quot; caption=&quot;&quot; %}

## 복구 불가 상황
위 방법대로 했는데에도 복구가 되지 않을 경우에는 다음 2가지 데이터를 모아서 Ncloud(네이버 클라우드) 고객센터로 문의하셔야 합니다.

- 모니터링 Agent 상태 정보
- 모니터링 Agent 로그

### 모니터링 Agent 상태 정보 확인
모니터링 Agent가 설치된 경로에서 아래의 상태 정보 확인 명령어를 실행합니다. 

``` bash
C:\Program Files (x86)\NBP\NSight&gt;noms_nsight.exe -status
```
{% include image.html file=&quot;management/ncloud_management_monitoring_win_perf_data_error_troubleshoot_08.png&quot; width=&quot;770&quot; alt=&quot;Ncloud Windows 서버 모니터링 성능 정보 수집 오류 해결 방법&quot; caption=&quot;&quot; %}

### 모니터링 Agent 로그
모니터링 Agent가 설치된 경로에 있는 파일과 폴더를 모두 압축합니다.

``` bash
C:\Program Files (x86)\NBP\NSight\
```

## 참고 URL
1.  성능 수집 오류 해결 FAQ
	- &lt;a href=&quot;https://www.ncloud.com/support/faq/all/1292&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://www.ncloud.com/support/faq/all/1292&lt;/a&gt;
</description>
            <pubDate></pubDate>
            <link>https://docs.3rdeyesys.com/management/ncloud_management_monitoring_win_perf_data_error_troubleshoot.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/management/ncloud_management_monitoring_win_perf_data_error_troubleshoot.html</guid>
            
            <category>windows</category>
            
            <category>monitoring</category>
            
            <category>log</category>
            
            
        </item>
        
        <item>
            <title>VPC 환경에서 Application Load Balancer 생성하기</title>
            <description>## 개요
네이버 클라우드 VPC 환경의 대표적인 Load Balancer인 Application Load Balancer 를 생성하는 가이드입니다.  
VPC와 Subnet을 생성하고, 테스트를 위한 서버 2대를 CentOS와 Ubuntu 각각 1대씩 준비해서 Application Load Balancer와 연결하고 접속해보는 과정까지 정리해보겠습니다.

## VPC 생성
VPC 환경에서는 먼저 VPC를 먼저 생성해야 하며, 이미 만들어진 VPC가 있다면 그대로 이용하셔도 됩니다.  
VPC의 IP 주소 범위는 private 대역 (10.0.0.0/8, 172.160.0./12, 192.168.0.0/16) 내에서 /16 ~ /28 범위여야 합니다.  
여기서는 192.168.0.0/16 범위의 VPC를 생성하겠습니다.

{% include image.html file=&quot;networking/ncp_networking_load_balancer_application_01.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud VPC 환경에서 Application Load Balancer 생성하기 가이드&quot; caption=&quot;&quot; %}

## Subnet 생성
Load Balancer를 생성할 때 Server와는 다른 Subnet을 사용해야 정상 작동합니다.  
그래서 여기서도 Load Balancer용 Subnet과 테스트 Server용 Subnet을 각각 생성하도록 하겠습니다.

### Load Balancer용 Subnet 생성
Load Balancer는 Private Subnet에 위치해야 하므로 192.168.1.0/24 IP 대역에 Internet Gateway 전용 여부 옵션은 N (Private)을 선택합니다.

{% include image.html file=&quot;networking/ncp_networking_load_balancer_application_02.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud VPC 환경에서 Application Load Balancer 생성하기 가이드&quot; caption=&quot;&quot; %}


### Server용 Subnet 생성
일반 서버용 Subnet은 192.168.2.0/24 IP 대역에 Internet Gateway 전용 여부 옵션은 Y (Public)을 선택합니다.

{% include image.html file=&quot;networking/ncp_networking_load_balancer_application_03.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud VPC 환경에서 Application Load Balancer 생성하기 가이드&quot; caption=&quot;&quot; %}

## 테스트용 Server 생성
테스트를 위한 서버는 위에서 생성했던 192.168.2.0/24 IP 대역의 Subnet을 선택하고 Network Interface도 동일한 Subnet을 선택합니다.  
Load Balancer를 테스트 하기 위한 서버이므로 2대를 생성하면서 1대는 CentOS, 나머지 1대는 Ubunt로 생성하겠습니다.

{% include image.html file=&quot;networking/ncp_networking_load_balancer_application_04.jpg&quot; width=&quot;850&quot; alt=&quot;Ncloud VPC 환경에서 Application Load Balancer 생성하기 가이드&quot; caption=&quot;&quot; %}

## Target Group 생성
[VPC] - [Load Balancer] - [Target Group]에서 Load Balancer가 바라보게 될 Target Group를 설정합니다.  
여기서는 HTTP 프로토콜과 80 포트를 선택하겠습니다.

{% include image.html file=&quot;networking/ncp_networking_load_balancer_application_05.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud VPC 환경에서 Application Load Balancer 생성하기 가이드&quot; caption=&quot;&quot; %}

다음으로 Health Check 설정에서는 HTTP, 80포트, HEAD Method를 선택합니다.

{% include image.html file=&quot;networking/ncp_networking_load_balancer_application_06.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud VPC 환경에서 Application Load Balancer 생성하기 가이드&quot; caption=&quot;&quot; %}

마지막으로 Target 즉, 대상이 되는 서버 2대 (lb-test-ubuntu, lb-test-centos)를 선택하고, 적용 Target쪽으로 이동시키는 버튼을 클릭합니다.

{% include image.html file=&quot;networking/ncp_networking_load_balancer_application_07.jpg&quot; width=&quot;810&quot; alt=&quot;Ncloud VPC 환경에서 Application Load Balancer 생성하기 가이드&quot; caption=&quot;&quot; %}

대상 서버들이 적용 Target으로 설정된 모습입니다. 이후에는 전체 설정을 다시 확인하고 생성 완료를 하면 됩니다.

{% include image.html file=&quot;networking/ncp_networking_load_balancer_application_08.jpg&quot; width=&quot;810&quot; alt=&quot;Ncloud VPC 환경에서 Application Load Balancer 생성하기 가이드&quot; caption=&quot;&quot; %}


## Load Balancer 생성
네이버 클라우드 VPC 환경에서 제공하는 Load Balancer는 애플리케이션 로드밸런서, 네트워크 로드밸런서, 네트워크 프록시 로드밸런서 이렇게 3가지가 있습니다.  
그 중에서 가장 많이 사용하는 HTTP, HTTPS 트래픽을 사용하는 웹 애플리케이션용 Application Load Balancer를 생성하겠습니다.

{% include image.html file=&quot;networking/ncp_networking_load_balancer_application_09.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud VPC 환경에서 Application Load Balancer 생성하기 가이드&quot; caption=&quot;&quot; %}

Network는 Public IP, Subnet은 앞에서 생성했던 192.168.1.0/24 대역의 Subnet을 선택합니다.

{% include image.html file=&quot;networking/ncp_networking_load_balancer_application_10.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud VPC 환경에서 Application Load Balancer 생성하기 가이드&quot; caption=&quot;&quot; %}

리스너 설정에서 프로토콜은 HTTP, 포트는 80을 선택하고 [추가] 버튼을 클릭합니다.

{% include image.html file=&quot;networking/ncp_networking_load_balancer_application_11.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud VPC 환경에서 Application Load Balancer 생성하기 가이드&quot; caption=&quot;&quot; %}

Target Group은 앞에서 생성했던 test-tg을 선택하면, 아래에 해당 Target Group의 설정이 표시됩니다.  
다음으로 전체 설정을 다시 확인하고 최종 생성하기 버튼을 클릭하면 Load Balancer가 생성됩니다.

{% include image.html file=&quot;networking/ncp_networking_load_balancer_application_12.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud VPC 환경에서 Application Load Balancer 생성하기 가이드&quot; caption=&quot;&quot; %}

## Network ACL 설정
Load Balancer가 정상 작동하기 위해서는 2가지 설정이 추가로 필요한데, 우선 Network ACL 설정에서 Load Balancer가 속한 Subnet 대역을 허용해 주어야 합니다.  
[VPC] - [Network ACL] - [ACL Rule]에서 [Rule 설정]에 있는 [Inbound 규칙]에 앞에서 생성했던 Load Balancer용 Subnet 대역인 192.168.1.0/24 대역의 80 포트를 허용으로 설정해 줍니다.

{% include image.html file=&quot;networking/ncp_networking_load_balancer_application_13.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud VPC 환경에서 Application Load Balancer 생성하기 가이드&quot; caption=&quot;&quot; %}

## ACG 설정
다음으로 [Server] - [ACG]에서 [Inbound 규칙]에 마찬가지로 Load Balancer용 Subnet 대역인 192.168.1.0/24 대역의 80 포트를 허용포트로 설정해 줍니다.

{% include image.html file=&quot;networking/ncp_networking_load_balancer_application_14.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud VPC 환경에서 Application Load Balancer 생성하기 가이드&quot; caption=&quot;&quot; %}

## Server 웹서버 설정
Application Load Balancer를 테스트 하기 위해서는 테스트 Server에 웹서버가 설정되어 있어야 하는데, 네이버 클라우드 VPC 환경에서는 LAMP, LEMP 등의 웹서버가 설정된 이미지를 제공하지 않습니다.  
그래서 기본 OS만 설치된 서버에 Apache 웹서버와 php를 설치하도록 하겠습니다. 설치 작업은 아래와 같이 Ubuntu와 CentOS 각각 스크립트를 만들어서 한번에 설치하는 방법을 사용했는데, 필요에 따라서는 하나씩 별도로 설치하셔도 됩니다.

### Ubuntu에 Apache, PHP 설치하기 스크립트
Apache와 PHP를 설치하고 기본문서 index.html에 서버의 호스트명을 출력하는 스크립트를 적용합니다.

사용한 OS는 Ubuntu 16.04 입니다.

``` bash
#!/bin/bash

apt-get update
apt-get install apache2 
apt-get install php
apt-get install libapache2-mod-php

systemctl start apache2

cd /var/www/html
echo &quot;&lt;?php&quot; &gt; index.html
echo &quot;echo \&quot;Your server name is \&quot;.(gethostname()).\&quot;&lt;br&gt;\&quot;;&quot; &gt;&gt; index.html
echo &quot;?&gt;&quot; &gt;&gt; index.html

echo AddType application/x-httpd-php .php .php3 .php4 .php5 .html .htm .inc &gt;&gt; phpadd
cat phpadd &gt;&gt; /etc/apache2/apache2.conf

systemctl restart apache2
systemctl enable apache2
systemctl status apache2
```
&lt;br /&gt;

### CentOS에 Apache, PHP 설치하기 스크립트
사용한 OS는 CentOS 7.3 입니다.

``` bash
#!/bin/bash

yum install -y httpd php

systemctl start httpd

cd /var/www/html
echo &quot;&lt;?php&quot; &gt; index.html
echo &quot;echo \&quot;Your server name is \&quot;.(gethostname()).\&quot;&lt;br&gt;\&quot;;&quot; &gt;&gt; index.html
echo &quot;?&gt;&quot; &gt;&gt; index.html

echo AddType application/x-httpd-php .php .php3 .php4 .php5 .html .htm .inc &gt;&gt; phpadd
cat phpadd &gt;&gt; /etc/httpd/conf/httpd.conf

systemctl restart httpd
systemctl enable httpd
systemctl status httpd
```

## 접속 테스트
앞에서 생성했던 Load Balancer 정보에서 접속 정보용 주소를 확인하고 복사합니다.

{% include image.html file=&quot;networking/ncp_networking_load_balancer_application_16.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud VPC 환경에서 Application Load Balancer 생성하기 가이드&quot; caption=&quot;&quot; %}

복사한 Load Balancer 주소를 웹브라우저에 입력하고 계속 새로 고침을 해보면 아래와 같이 CentOS 서버와 Ubuntu에 접속될 때 마다 해당 서버의 호스트명이 출력되면서 Load Balancer가 정상 작동하는 것을 확인할 수 있습니다.

{% include image.html file=&quot;networking/ncp_networking_load_balancer_application_15-1.jpg&quot; width=&quot;560&quot; alt=&quot;Ncloud VPC 환경에서 Application Load Balancer 생성하기 가이드&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;networking/ncp_networking_load_balancer_application_15-2.jpg&quot; width=&quot;560&quot; alt=&quot;Ncloud VPC 환경에서 Application Load Balancer 생성하기 가이드&quot; caption=&quot;&quot; %}


## 참고 URL
1. Application Load Balancer 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/networking-loadbalancer-applicationlbconsole&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/networking-loadbalancer-applicationlbconsole&lt;/a&gt;

2. Target Group 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/networking-loadbalancer-targetgroupconsole&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/networking-loadbalancer-targetgroupconsole&lt;/a&gt;
</description>
            <pubDate></pubDate>
            <link>https://docs.3rdeyesys.com/networking/ncloud_networking_load_balancer_application_lb.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/networking/ncloud_networking_load_balancer_application_lb.html</guid>
            
            <category>vpc</category>
            
            <category>load_balancer</category>
            
            
        </item>
        
        <item>
            <title>Cloud Log Analytics 설정 가이드</title>
            <description>## 개요
Cloud Log Analytics는 Ncloud(네이버 클라우드)가 제공하는 여러 서비스에서 발생하는 다양한 로그들을 한 곳에 모아 저장하고 손쉽게 분석할 수 있는 서비스로, 
검색 기능을 이용해 여러 종류의 로그를 한 곳에서 한번에 조회하고 분석할 수 있어 효과적인 로그 관리가 가능합니다. 

## 로그 템플릿 종류
Cloud Log Analytics는 텍스트 형식으로 생성되는 모든 종류의 로그 데이터 파일을 수집할 수 있는데, 사전에 제공되는 로그 템플릿 종류는 다음과 같습니다.

- Server syslog
- Apache 로그(Access log, Apache Error Log)
- MySQL 설치형 상품의 로그(Error Log, Slow Log)
- Microsoft SQL Server 설치형 상품의 Error Log
- Tomcat 로그(Catalina Log)
- Windows 서버의 Event Log
- Windows 서버의 각종 text 형식의 로그
- Cloud DB for MySQL 로그
- Cloud DB for MSSQL 로그
- Cloud DB for MongoDB 로그
- Application Server Launcher 로그
- Application Load Balancer 로그
- Search Engine Service 로그
- Cloud Data Streaming Service 로그
- Bare Metal Server 로그
- 그외 템플릿으로 제공되지 않는 로그도 Custom Log 기능으로 직접 대상 로그를 지정해서 수집할 수 있습니다

## 저장 용량
- **최대 100GB**까지 저장할 수 있습니다.
- 100GB 용량을 초과했을 경우 추가 저장 용량 확보를 위해 과거부터 전날까지의 데이터가 삭제될 수 있습니다.
- CLA로 수집되는 로그량이 하루 10GB 이상을 넘거나 천만 건 이상일 경우 저장된 로그 검색시 성능에 제한이 발생할 수 있습니다.
- 저장 용량과 저장 기간을 더 늘리길 원할 경우 고객지원으로 문의해야 합니다.
- 과거 데이터를 보관하려면 [자동 보내기] 기능을 이용하여 과거 데이터를 Object Storage로 백업할 수 있습니다.

## 로그 보관 기간
- Cloud Log Analytics 서비스는 **최대 30일** 동안 데이터가 보관되며, 검색 및 대시보드에서 확인할 수 있습니다.
- 30일이 지난 데이터는 과거 데이터부터 순차적으로 삭제됩니다.
- 30일이 지나지 않았더라도 저장된 데이터가 100GB를 초과하면 과거부터 전날까지의 데이터가 매일 삭제될 수 있습니다.

## 이용신청
Ncloud(네이버 클라우드) 콘솔 [Cloud Log Analytics] - [Subscription]에서 [이용 신청] 버튼을 클릭합니다. 
Cloud Log Analytics는 Classic, VPC 환경 공통 서비스이므로 어느쪽 환경에서 이용신청을 해도 상관없습니다.

{% include image.html file=&quot;analytics/ncloud_analytics_cloud_log_analytics_guide_01.png&quot; width=&quot;770&quot; alt=&quot;Ncloud 로그 분석 서비스인 Cloud Log Analytics를 생성하고 설정하는 방법&quot; caption=&quot;&quot; %}


## 설정 - Linux
먼저 Linux 서버에서 설정하는 방법을 알아보겠습니다.  
[Cloud Log Analytics] - [Management]에서 로그를 수집할 서버를 선택하고, [수집 설정] 버튼을 클릭합니다.  

{% include image.html file=&quot;analytics/ncloud_analytics_cloud_log_analytics_guide_02.png&quot; width=&quot;770&quot; alt=&quot;Ncloud 로그 분석 서비스인 Cloud Log Analytics를 생성하고 설정하는 방법&quot; caption=&quot;&quot; %}

Log 수집 설정 화면에서 수집할 로그 템플릿을 선택하거나, 직접 [Custom Log]를 선택해서 로그 형태를 설정한 후에 [적용] 버튼을 클릭합니다.

{% include image.html file=&quot;analytics/ncloud_analytics_cloud_log_analytics_guide_03.png&quot; width=&quot;770&quot; alt=&quot;Ncloud 로그 분석 서비스인 Cloud Log Analytics를 생성하고 설정하는 방법&quot; caption=&quot;&quot; %}

### 로그 수집 Agent 설치
Log 수집 설정을 마치면 [로그 수집 Agent] 설치 안내가 나옵니다.  
로그 수집 Agent 설치 명령어에는 URL 뒤쪽에 설치 하려는 서버에 해당하는 **설치키(Install Key)**가 포함되어 있습니다. 그러므로 URL을 수정해서도 안되고 다른 서버에 사용할 수도 없습니다.

``` bash
# VPC 환경
~# curl -s http://cm.vcla.ncloud.com/setUpClaVPC/{설치키(Install Key)} | sudo sh

# Classic 환경
~# curl -s http://cm.cla.ncloud.com/setUpCla/{설치키(Install Key)} | sudo sh
```

{% include image.html file=&quot;analytics/ncloud_analytics_cloud_log_analytics_guide_04.png&quot; width=&quot;770&quot; alt=&quot;Ncloud 로그 분석 서비스인 Cloud Log Analytics를 생성하고 설정하는 방법&quot; caption=&quot;&quot; %}

서버에 실제로 설치해보면 아래와 같이 설치 과정이 진행되고,  
설치가 완료되면 마지막에 **Finish Installation**이라는 메시지가 출력됩니다.

{% include image.html file=&quot;analytics/ncloud_analytics_cloud_log_analytics_guide_06.png&quot; width=&quot;770&quot; alt=&quot;Ncloud 로그 분석 서비스인 Cloud Log Analytics를 생성하고 설정하는 방법&quot; caption=&quot;&quot; %}

설치된 Agent가 제대로 작동하고 있는지 확인해보면 아래와 같이 active (running) 상태인 것을 확인할 수 있습니다.
``` bash
~# systemctl status filebeat
```
{% include image.html file=&quot;analytics/ncloud_analytics_cloud_log_analytics_guide_07.png&quot; width=&quot;770&quot; alt=&quot;Ncloud 로그 분석 서비스인 Cloud Log Analytics를 생성하고 설정하는 방법&quot; caption=&quot;&quot; %}

## 설정 - Windows
다음으로 Windows 서버에서 설정하는 방법을 살펴보겠습니다.  
마찬가지로 서버를 선택하고 [수집 설정] 버튼을 클릭합니다.

{% include image.html file=&quot;analytics/ncloud_analytics_cloud_log_analytics_guide_11.png&quot; width=&quot;770&quot; alt=&quot;Ncloud 로그 분석 서비스인 Cloud Log Analytics를 생성하고 설정하는 방법&quot; caption=&quot;&quot; %}

로그 수집 설정에서 Log Template은 [EventLog]를 선택합니다.

{% include image.html file=&quot;analytics/ncloud_analytics_cloud_log_analytics_guide_12.png&quot; width=&quot;770&quot; alt=&quot;Ncloud 로그 분석 서비스인 Cloud Log Analytics를 생성하고 설정하는 방법&quot; caption=&quot;&quot; %}

설정을 마치면 Agent 설치 가이드를 확인할 수 있습니다.  
서버에서 [Windows PowerShell]을 열고, 아래 명령어를 실행합니다. 마찬가지로 마지막에는 설치 서버에 해당하는 **설치키**가 포함되어 있습니다.

``` bash
# VPC 환경
Invoke-Expression $((New-Object System.Net.WebClient).DownloadString(&quot;http://cm.vcla.ncloud.com/setUpwinClaVPC/{설치키(Install Key)}&quot;))

# Classic 환경
Invoke-Expression $((New-Object System.Net.WebClient).DownloadString(&quot;http://cm.cla.ncloud.com/setUpwinClaVPC/{설치키(Install Key)}&quot;))
```
{% include image.html file=&quot;analytics/ncloud_analytics_cloud_log_analytics_guide_13.png&quot; width=&quot;770&quot; alt=&quot;Ncloud 로그 분석 서비스인 Cloud Log Analytics를 생성하고 설정하는 방법&quot; caption=&quot;&quot; %}

설치가 완료되면 마지막에 **Finish Installation**이라는 메시지가 출력됩니다.

{% include image.html file=&quot;analytics/ncloud_analytics_cloud_log_analytics_guide_14.png&quot; width=&quot;770&quot; alt=&quot;Ncloud 로그 분석 서비스인 Cloud Log Analytics를 생성하고 설정하는 방법&quot; caption=&quot;&quot; %}

### Windows Server 2019 지원 여부
현재 Windows Server 2019는 지원하지 않고, 2022년 상반기 지원 예정입니다.  
Windows Server 2019는 아래와 같이 선택을 해도 [수집 설정] 버튼을 활성화되지 않습니다.

{% include image.html file=&quot;analytics/ncloud_analytics_cloud_log_analytics_guide_15.png&quot; width=&quot;770&quot; alt=&quot;Ncloud 로그 분석 서비스인 Cloud Log Analytics를 생성하고 설정하는 방법&quot; caption=&quot;&quot; %}

## 로그 확인
Agent 설치 후 [Dashboard]를 확인해보면 로그가 수집되고 있을 것을 알 수 있습니다.

{% include image.html file=&quot;analytics/ncloud_analytics_cloud_log_analytics_guide_08.png&quot; width=&quot;770&quot; alt=&quot;Ncloud 로그 분석 서비스인 Cloud Log Analytics를 생성하고 설정하는 방법&quot; caption=&quot;&quot; %}

[Search] 메뉴에서는 로그 내용을 자세히 검색, 확인할 수 있고, 굳이 서버에 접속하지 않더라도 필요한 로그를 콘솔 화면에서 직접 확인할 수 있습니다.

{% include image.html file=&quot;analytics/ncloud_analytics_cloud_log_analytics_guide_09.png&quot; width=&quot;770&quot; alt=&quot;Ncloud 로그 분석 서비스인 Cloud Log Analytics를 생성하고 설정하는 방법&quot; caption=&quot;&quot; %}

## 로그 백업
Cloud Log Analytics는 수집된 로그를 Object Storage로 내보내기하거나 Excel 파일로 다운로드 해서 백업할 수 있는 기능을 지원합니다.

### 수동 백업
[Search] 메뉴에 [Object Storage로 내보내기]와 [X 다운로드] 버튼이 있습니다.

{% include image.html file=&quot;analytics/ncloud_analytics_cloud_log_analytics_guide_24.png&quot; width=&quot;770&quot; alt=&quot;Ncloud 로그 분석 서비스인 Cloud Log Analytics를 생성하고 설정하는 방법&quot; caption=&quot;&quot; %}

[Object Storage로 내보내기] 버튼을 클릭하면 내보내기 할 버킷을 선택할 수 있습니다.

{% include image.html file=&quot;analytics/ncloud_analytics_cloud_log_analytics_guide_25.png&quot; width=&quot;770&quot; alt=&quot;Ncloud 로그 분석 서비스인 Cloud Log Analytics를 생성하고 설정하는 방법&quot; caption=&quot;&quot; %}

### 자동 백업
[Export Log] 메뉴에서 [자동 내보내기 설정]을 클릭합니다.

{% include image.html file=&quot;analytics/ncloud_analytics_cloud_log_analytics_guide_16.png&quot; width=&quot;770&quot; alt=&quot;Ncloud 로그 분석 서비스인 Cloud Log Analytics를 생성하고 설정하는 방법&quot; caption=&quot;&quot; %}

설정 화면에서 내보내기를 할 Object Storage의 버킷을 선택합니다. 혹시 버킷이 생성되지 않았다면 Object Storage로 가서 먼저 버킷을 생성하고 와야 합니다.

{% include image.html file=&quot;analytics/ncloud_analytics_cloud_log_analytics_guide_17.png&quot; width=&quot;700&quot; alt=&quot;Ncloud 로그 분석 서비스인 Cloud Log Analytics를 생성하고 설정하는 방법&quot; caption=&quot;&quot; %}

내보내기는 하루에 한번 진행되므로 설정 후 다음 날 Object Storage에서 아래와 같이 파일이 저장되어 있는 것을 확인할 수 있습니다.

{% include image.html file=&quot;analytics/ncloud_analytics_cloud_log_analytics_guide_20.png&quot; width=&quot;770&quot; alt=&quot;Ncloud 로그 분석 서비스인 Cloud Log Analytics를 생성하고 설정하는 방법&quot; caption=&quot;&quot; %}


## 로그 수집 해제
더 이상 로그를 수집할 필요가 없어지면, 로그 수집 설정을 해제하면 됩니다.  

### Linux 서버 로그 수집 해제
서버를 선택하고 [수집 해제] 버튼을 클릭합니다.

{% include image.html file=&quot;analytics/ncloud_analytics_cloud_log_analytics_guide_22.png&quot; width=&quot;770&quot; alt=&quot;Ncloud 로그 분석 서비스인 Cloud Log Analytics를 생성하고 설정하는 방법&quot; caption=&quot;&quot; %}
로그 수집 해제를 위한 가이드에서 로그 수집 Agent 삭제 명령어를 복사합니다.

``` bash
# VPC 환경
~# curl -s http://cm.vcla.ncloud.com/removeCla | sudo sh

# Classic 환경
~# curl -s http://cm.cla.ncloud.com/removeCla | sudo sh
```
{% include image.html file=&quot;analytics/ncloud_analytics_cloud_log_analytics_guide_05.png&quot; width=&quot;770&quot; alt=&quot;Ncloud 로그 분석 서비스인 Cloud Log Analytics를 생성하고 설정하는 방법&quot; caption=&quot;&quot; %}

Agent 삭제 명령어를 실행하면 아래와 같이 **Success Remove Agent** 메시지가 출력됩니다.

{% include image.html file=&quot;analytics/ncloud_analytics_cloud_log_analytics_guide_10.png&quot; width=&quot;770&quot; alt=&quot;Ncloud 로그 분석 서비스인 Cloud Log Analytics를 생성하고 설정하는 방법&quot; caption=&quot;&quot; %}


### Windows 서버 로그 수집 해제
마찬가지로 서버를 선택하고 [수집 해제] 버튼을 클릭합니다.

{% include image.html file=&quot;analytics/ncloud_analytics_cloud_log_analytics_guide_22.png&quot; width=&quot;770&quot; alt=&quot;Ncloud 로그 분석 서비스인 Cloud Log Analytics를 생성하고 설정하는 방법&quot; caption=&quot;&quot; %}

로그 수집 해제를 위한 가이드에서 로그 수집 Agent 삭제 명령어를 복사합니다.

``` bash
# VPC 환경
Invoke-Expression $((New-Object System.Net.WebClient).DownloadString(&quot;http://cm.vcla.ncloud.com/removewinCla&quot;))

# Classic 환경
Invoke-Expression $((New-Object System.Net.WebClient).DownloadString(&quot;http://cm.cla.ncloud.com/removewinCla&quot;))
```
{% include image.html file=&quot;analytics/ncloud_analytics_cloud_log_analytics_guide_18.png&quot; width=&quot;770&quot; alt=&quot;Ncloud 로그 분석 서비스인 Cloud Log Analytics를 생성하고 설정하는 방법&quot; caption=&quot;&quot; %}

Agent 삭제 명령어를 실행하면 아래와 같이 **Remove Agent** 메시지가 출력됩니다.

{% include image.html file=&quot;analytics/ncloud_analytics_cloud_log_analytics_guide_19.png&quot; width=&quot;770&quot; alt=&quot;Ncloud 로그 분석 서비스인 Cloud Log Analytics를 생성하고 설정하는 방법&quot; caption=&quot;&quot; %}


### Windows 서버 Agent 삭제 오류 상황
Windows 서버에서 Agent 삭제를 시도할 때 아래와 같이 오류 메시지가 발생하는 경우가 있습니다.  
이때는 당황하지 마시고, Agent 삭제 명령어를 다시 한번 실행하면 됩니다.

{% include warning.html title=&quot;Stop-Service&quot; content=&quot;Cannot find any service with service name &apos;filebeat&apos;.&quot; %}
{% include callout.html type=&quot;info&quot; level=&quot;1&quot; content=&quot;로그 수집 설정에서 EventLog만 선택했을 경우 발생합니다.&quot; %}

로그 수집 Agent는 윈도 이벤트 로그 수집을 위한 winlogbeat와 그 외 로그를 수집하기 위한 filebeat 두가지가 설치되는데, EventLog만 수집하도록 설정할 경우 filebeat는 실행되지 않습니다. 
그 상태에서 Agent를 삭제하려고 하면 실행중이 아닌 filebeat를 실행 중지 시키려고 시도하게 되고, 결국 오류가 발생합니다.  

그러므로 심각한 오류는 아니고 만약을 위해 Agent 삭제 명령어를 한번 더 실행시키는 것으로 문제는 해결됩니다.

{% include image.html file=&quot;analytics/ncloud_analytics_cloud_log_analytics_guide_21.png&quot; width=&quot;770&quot; alt=&quot;Ncloud 로그 분석 서비스인 Cloud Log Analytics를 생성하고 설정하는 방법&quot; caption=&quot;&quot; %}

## 참고 URL
1.  Cloud Log Analytics 사용 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/cla-cla-1-1&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/cla-cla-1-1&lt;/a&gt;


</description>
            <pubDate></pubDate>
            <link>https://docs.3rdeyesys.com/analytics/ncloud_analytics_cloud_log_analytics_guide.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/analytics/ncloud_analytics_cloud_log_analytics_guide.html</guid>
            
            <category>log</category>
            
            <category>analytics</category>
            
            
        </item>
        
        <item>
            <title>VPC환경에서 Cloud DB for MySQL 생성하기</title>
            <description>## 개요
Ncloud의 Cloud DB for MySQL 서비스는 MySQL 데이터베이스를 쉽고 간편하게 구축하고 관리할 수 있고 자동 Fail-Over, 자동백업, 네이버 서비스에서 검증된 최적화된 설정 등을 제공해주는 
완전 관리형 클라우드 데이터베이스 서비스입니다.  
여기서는 VPC환경에서 Cloud DB for MySQL 서비스를 생성하는 과정을 정리해보겠습니다.

{% include callout.html type=&quot;warning&quot; level=&quot;1&quot; content=&quot;Ncloud는 Classic환경에서는 DB 서버 이미지를 제공하지만, VPC 환경에서는 제공하지 않습니다. 
그러므로 VPC 환경에서 DB서버를 사용하려면 OS에 사용자가 직접 DB를 설치해서 사용하는 방법과 Cloud DB를 사용하는 방법 중에서 선택해야 합니다.&quot; %}

## 특징
- 기본 10GB 데이터 스토리지를 제공하며, 10GB 단위로 6,000GB까지 자동으로 용량이 증가합니다. 
- 하나의 마스터 DB마다 최대 10대의 슬레이브 DB를 생성할 수 있습니다.
- Load Balancer 상품을 통해 슬레이브 DB 서버들을 읽기 전용 복제본으로 사용함으로써 데이터베이스의 읽기 부하를 분산 시킬 수 있습니다.
- 매일 1회 고객이 원하는 시간에 DB를 자동으로 백업하며, 백업한 데이터를 최대 30일까지 보관할 수 있습니다.
- VPC 환경에서는 멀티 존으로 구성해 높은 안정성을 보장받을 수 있습니다.
- Cloud DB for MySQL 서비스는 완전 관리형 상품으로 사용자는 DB서버의 운영체제에 접근할 수 없습니다.

## DB 접속 방법 3가지
1. Private 도메인을 이용해 접속하는 방법
2. SSL VPN을 이용해 접속하는 방법
3. Public 도메인을 이용해 접속하는 방법

아래에서는 VPC환경에서 Private 도메인을 이용해 접속하는 방법을 설명하도록 하겠습니다.  
만약 네이버 클라우드 외부 환경에서  Cloud DB for MySQL로 접속하려면 Public 도메인을 사용해야 합니다.

## VPC-Subnet  생성

### VPC 생성
VPC환경에서 작업할 것이므로 우선 VPC를 생성합니다.

{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_01.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_02.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

### Subnet 생성
Subnet은 Cloud DB for MySQL을 위한 Private Subnet과 DB 접속 테스트를 위한 Server용 Public Subnet을 각각 생성합니다.

{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_03.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

### Cloud DB for MySQL을 위한 Private Subnet
{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_05.jpg&quot; width=&quot;680&quot; alt=&quot;Ncloud VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

### 테스트용 Server를 위한 Public Subnet
{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_04.jpg&quot; width=&quot;680&quot; alt=&quot;Ncloud VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

## 테스트 Server 생성
DB 서버 접속을 테스트 하기 위한 Server를 생성합니다.

{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_06.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

## DB 서버 생성
[Database] - [Cloud DB for MySQL]에서 [DB Server 생성] 버튼을 클릭합니다.

{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_11.jpg&quot; width=&quot;670&quot; alt=&quot;Ncloud VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

### DB 서버 엔진 버전
DB 엔진 버전은 MySQL 최신 버전 중 네이버에서 안정성이 검증된 버전인 5.7버전과 8.0버전을 제공합니다. (기본값 5.7.32)

{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_12-1.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

### DB 서버 이름과 DB 서비스 이름
- DB Server 이름은 고객이 DB 서버를 구분하기 위한 명칭으로, 사용자가 입력한 이름 뒤에 001, 002와 같이 숫자를 붙여 서버를 구분하게 됩니다.
- 예를 들어 DB 서버 이름을 mydb라고 입력하면 생성되는 DB 서버 이름은 mydb-001, mydb-002와 같습니다.
- DB 서비스 이름은 역할별 DB 서버를 구분하기 위한 이름입니다.
- 일반적으로 하나의 액티브 마스터 DB, 스탠바이 마스터 DB, 다수의 슬레이브 DB로 구성되는 DB 서버군을 말하며, 동일한 데이터를 갖고 있는 DB 서버들을 하나의 DB 서비스라 말합니다.
- 예를 들어 &quot;쇼핑 메인 DB&quot;, &quot;게임 유저 DB&quot;와 같은 식으로 DB 서비스의 역할을 구분하기 위해 사용합니다.

{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_12-2.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

{% include callout.html type=&quot;success&quot; level=&quot;1&quot; content=&quot;Cloud DB를 위한 ACG는 자동 생성됩니다(예: cloud-mysql-*)&quot; %}

### DB 서버 설정
DB 이름과 계정. 비번, 접속 포트 등을 설정합니다.  
HOST(IP) 설정에는 DB에 접근을 허용할 IP대역을 입력합니다. 여기서는 테스트용 서버의 Subnet 대역을 모두 허용하기 위해 [192.168.2.%]를 입력합니다.  
만약 특정 서버 1대만 허용하려고 할 경우에는 앞에서 생성한 테스트 서버 IP처럼 [192.168.2.6]을 입력합니다.

{% include warning.html title=&quot;접속포트 설정&quot; content=&quot;DB 접속포트는 한번 설정하면 이후에 변경할 수 없으니 신중하게 설정하셔야 합니다.&quot; %}

{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_12-3.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}


## ACG 설정
Cloud DB for MySQL을 생성할 때 자동 생성된 ACG [cloud-mysql-*]을 선택하고 ACG 설정을 클릭합니다.

{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_14.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

Inbound 설정에 테스트용 Server의 Subnet 대역인 192.168.2.0/24를 접근소스에 입력합니다.  
또는 특정 서버 1대만 허용하려고 할 경우에는 앞에서 생성한 테스트 서버 IP처럼 [192.168.2.6]을 입력합니다.

{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_15.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}



## MySQL Client 설치
DB 접속 테스트를 위해 생성한 서버에서 MySQL Client를 설치합니다.

``` bash
# mariadb
~# yum install -y mysql mysql-server

# mysql 5.7
~# yum install -y https://dev.mysql.com/get/mysql80-community-release-el7-3.noarch.rpm
~# yum install -y --disablerepo=&quot;mysql80-community&quot; --enablerepo=&quot;mysql57-community&quot; mysql-community-server
~# mysqld --initialize-insecure --user=mysql
~# systemctl start mysqld
```
{: .info }
CentOS 7부터는 yum으로 설치하는 MySQL의 기본 데이터베이스가 MariaDB로 변경되었습니다

{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_19.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}


## DB 서버 접속
Cloud DB for MySQL에 접속하기 위한 주소인 [Private 도메인]을 확인 합니다.

{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_13.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

테스트용 Server에서 Cloud DB for MySQL로 접속하는 방법은 다음과 같습니다.

``` bash
~# mysql -h [Private 도메인명] -u [user_id] -p
```
&lt;br /&gt;
DB에 접속해보면 처음 Cloud DB for MySQL 생성할 때 입력한 테이터베이스 [test]를 확인할 수 있습니다.

{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_18.jpg&quot; width=&quot;650&quot; alt=&quot;Ncloud VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

## DB 서버 상세보기
DB 서버 상세보기 메뉴에서는 [Process list], [Variables], [Status], [Database 관리], [DB Config 관리], [DB User 관리], [Backup 설정 관리], [DB Server Logs] 등을 확인할 수 있습니다.

{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_16.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_17.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}


### DB User 관리
DB 서버를 이용하다보면 여러 계정이 필요하게 됩니다. 이때 계정을 추가하기 위해 [DB 서버 상세보기] - [DB User 관리] 메뉴를 클릭합니다. 

USER_ID, HOST, DB 권한, 암호를 입력하고 DB User 추가 버튼을 클릭합니다.  
- 사용자가 변경한 DB 계정은 DB 서비스 전체에 적용됩니다.
- USER_ID + HOST(IP) 단위로 계정 추가 및 권한 관리를 합니다.
- DB 권한에서 DDL 권한은 CRUD 권한을 포함합니다.
- 최대 1,000개까지 계정을 추가 및 조회 할 수 있습니다.

{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_20.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}


## 참고 URL
1. Cloud DB for MySQL 기본 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/database-database-5-6&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/database-database-5-6&lt;/a&gt;

2. Cloud DB 서버 외부 접근 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/database-database-5-10&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/database-database-5-10&lt;/a&gt;
</description>
            <pubDate></pubDate>
            <link>https://docs.3rdeyesys.com/database/ncloud_database_cloud_db_for_mysql_guide.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/database/ncloud_database_cloud_db_for_mysql_guide.html</guid>
            
            <category>database</category>
            
            <category>mysql</category>
            
            <category>clouddb</category>
            
            <category>vpc</category>
            
            
        </item>
        
        <item>
            <title>Cloud DB for MySQL 생성후 Public 도메인으로 접속하기</title>
            <description>## 개요
네이버 클라우드의 Cloud DB for MySQL 서비스는 MySQL 데이터베이스를 쉽고 간편하게 구축하고 관리할 수 있고 자동 Fail-Over, 자동백업, 네이버 서비스에서 검증된 최적화된 설정 등을 제공해주는 
완전 관리형 클라우드 데이터베이스 서비스입니다.  
여기서는 VPC환경에서 Cloud DB for MySQL 서비스를 생성하고, Public 도메인으로 접속하는 과정을 정리해보겠습니다.

{% include callout.html type=&quot;warning&quot; level=&quot;1&quot; content=&quot;네이버 클라우드는 Classic환경에서는 DB 서버 이미지를 제공하지만, VPC 환경에서는 제공하지 않습니다. 
그러므로 VPC 환경에서 DB서버를 사용하려면 OS에 사용자가 직접 DB를 설치해서 사용하는 방법과 Cloud DB를 사용하는 방법 중에서 선택해야 합니다.&quot; %}


## 특징
- 기본 10GB 데이터 스토리지를 제공하며, 10GB 단위로 6,000GB까지 자동으로 용량이 증가합니다. 
- 하나의 마스터 DB마다 최대 10대의 슬레이브 DB를 생성할 수 있습니다.
- Load Balancer 상품을 통해 슬레이브 DB 서버들을 읽기 전용 복제본으로 사용함으로써 데이터베이스의 읽기 부하를 분산 시킬 수 있습니다.
- 매일 1회 고객이 원하는 시간에 DB를 자동으로 백업하며, 백업한 데이터를 최대 30일까지 보관할 수 있습니다.
- VPC 환경에서는 멀티 존으로 구성해 높은 안정성을 보장받을 수 있습니다.
- Cloud DB for MySQL 서비스는 완전 관리형 상품으로 사용자는 DB서버의 운영체제에 접근할 수 없습니다.

## DB 접속 방법 3가지
1. Private 도메인을 이용해 접속하는 방법
2. SSL VPN을 이용해 접속하는 방법
3. Public 도메인을 이용해 접속하는 방법

아래에서는 VPC환경 기준으로 네이버 클라우드 외부 환경에서  Cloud DB for MySQL로 접속할 때 필요한 Public 도메인을 이용해 접속하는 방법을 정리하도록 하겠습니다.  


## VPC-Subnet  생성

### VPC 생성
VPC환경에서 작업할 것이므로 우선 VPC를 생성합니다.

{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_01.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud Cloud DB for MySQL 생성후 Public 도메인으로 접속하는 방법&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_02.jpg&quot; width=&quot;680&quot; alt=&quot;Ncloud Cloud DB for MySQL 생성후 Public 도메인으로 접속하는 방법&quot; caption=&quot;&quot; %}

### Subnet 생성
Subnet은 Public Subnet을 생성합니다.

{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_03.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud Cloud DB for MySQL 생성후 Public 도메인으로 접속하는 방법&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_04.jpg&quot; width=&quot;680&quot; alt=&quot;Ncloud Cloud DB for MySQL 생성후 Public 도메인으로 접속하는 방법&quot; caption=&quot;&quot; %}

## DB 서버 생성
[Database] - [Cloud DB for MySQL]에서 [DB Server 생성] 버튼을 클릭합니다.

{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_11.jpg&quot; width=&quot;670&quot; alt=&quot;Ncloud Cloud DB for MySQL 생성후 Public 도메인으로 접속하는 방법&quot; caption=&quot;&quot; %}

### DB 서버 엔진 버전
DB 엔진 버전은 MySQL 최신 버전 중 네이버에서 안정성이 검증된 버전인 5.7버전과 8.0버전을 제공합니다. (기본값 5.7.32)

{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_public_domain_01-1.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud Cloud DB for MySQL 생성후 Public 도메인으로 접속하는 방법&quot; caption=&quot;&quot; %}

### DB 서버 이름과 DB 서비스 이름
- DB Server 이름은 고객이 DB 서버를 구분하기 위한 명칭으로, 사용자가 입력한 이름 뒤에 001, 002와 같이 숫자를 붙여 서버를 구분하게 됩니다.
- 예를 들어 DB 서버 이름을 mydb라고 입력하면 생성되는 DB 서버 이름은 mydb-001, mydb-002와 같습니다.
- DB 서비스 이름은 역할별 DB 서버를 구분하기 위한 이름입니다.
- 일반적으로 하나의 액티브 마스터 DB, 스탠바이 마스터 DB, 다수의 슬레이브 DB로 구성되는 DB 서버군을 말하며, 동일한 데이터를 갖고 있는 DB 서버들을 하나의 DB 서비스라 말합니다.
- 예를 들어 &quot;쇼핑 메인 DB&quot;, &quot;게임 유저 DB&quot;와 같은 식으로 DB 서비스의 역할을 구분하기 위해 사용합니다.

{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_12-2.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud Cloud DB for MySQL 생성후 Public 도메인으로 접속하는 방법&quot; caption=&quot;&quot; %}

{% include callout.html type=&quot;success&quot; level=&quot;1&quot; content=&quot;Cloud DB를 위한 ACG는 자동 생성됩니다(예: cloud-mysql-*)&quot; %}

### DB 서버 설정
DB 이름과 계정. 비번, 접속 포트 등을 설정합니다.  
HOST(IP) 설정에는 DB에 접근을 허용할 IP대역을 입력합니다. 여기서는 Public 도메인을 이용하게 되므로 우선 모든 대역을 허용하기 위해 [%]를 입력합니다. 
대신 접속 IP 제한의 경우 ACG에서 설정하게 됩니다.

{% include warning.html title=&quot;접속포트 설정&quot; content=&quot;DB 접속포트는 한번 설정하면 이후에 변경할 수 없으니 신중하게 설정하셔야 합니다.&quot; %}


{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_public_domain_01-3.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud Cloud DB for MySQL 생성후 Public 도메인으로 접속하는 방법&quot; caption=&quot;&quot; %}


## ACG 설정
Cloud DB for MySQL을 생성할 때 자동 생성된 ACG [cloud-mysql-*]을 선택하고 ACG 설정을 클릭합니다.

{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_14.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud Cloud DB for MySQL 생성후 Public 도메인으로 접속하는 방법&quot; caption=&quot;&quot; %}

Inbound 설정에 접속을 허용할 IP를 입력합니다. 여기서는 테스트를 위해 [myIp] 버튼을 클릭해 현재 로컬PC IP를 입력합니다.

{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_public_domain_02.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud Cloud DB for MySQL 생성후 Public 도메인으로 접속하는 방법&quot; caption=&quot;&quot; %}

## Public 도메인 할당
DB 서버를 생성한 직후에는 아래 스샷과 같이 Public 도메인이 미할당 상태입니다.

{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_public_domain_03.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud Cloud DB for MySQL 생성후 Public 도메인으로 접속하는 방법&quot; caption=&quot;&quot; %}
[DB 관리] - [Public 도메인 관리] 메뉴를 클릭해 Public 도메인을 신청합니다.

{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_public_domain_04.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud Cloud DB for MySQL 생성후 Public 도메인으로 접속하는 방법&quot; caption=&quot;&quot; %}

Public 도메인을 신청하면 네이버 클라우드 플랫폼 외부에서 DB 서버로 접근할 수 있습니다.   
이때 외부에서 통신하는 데이터는 네트워크 사용량으로 과금이 됩니다.

{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_public_domain_05.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud Cloud DB for MySQL 생성후 Public 도메인으로 접속하는 방법&quot; caption=&quot;&quot; %}

Public 도메인 신청을 하고  나면 할당된 Public 도메인을 확인할 수 있습니다.

{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_public_domain_06.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud Cloud DB for MySQL 생성후 Public 도메인으로 접속하는 방법&quot; caption=&quot;&quot; %}


## DB User 관리
네이버 클라우드 외부에서 DB에 접속하려고 할때는 보안을 위해 별도의 계정을 추가해서 사용하는 것을 추천합니다.  
계정을 추가하기 위해 [DB 관리] - [DB User 관리] 메뉴를 클릭합니다. 

{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_public_domain_09.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud Cloud DB for MySQL 생성후 Public 도메인으로 접속하는 방법&quot; caption=&quot;&quot; %}

USER_ID, HOST, DB 권한, 암호를 입력하고 DB User 추가 버튼을 클릭합니다.  
- 사용자가 변경한 DB 계정은 DB 서비스 전체에 적용됩니다.
- USER_ID + HOST(IP) 단위로 계정 추가 및 권한 관리를 합니다.
- DB 권한에서 DDL 권한은 CRUD 권한을 포함합니다.
- 최대 1,000개까지 계정을 추가 및 조회 할 수 있습니다.

{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_public_domain_10.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud Cloud DB for MySQL 생성후 Public 도메인으로 접속하는 방법&quot; caption=&quot;&quot; %}

## 외부접속 테스트
네이버 클라우드 외부 접속을 테스트 하기 위해 로컬PC에 MySQL Workbench를 설치해서 접속해보겠습니다. 
MySQL Workbench는 아래 경로에서 다운 받을 수 있습니다.

&lt;a href=&quot;https://www.mysql.com/products/workbench/&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://www.mysql.com/products/workbench/&lt;/a&gt;


앞에서 확인한 Public 도메인을 입력하고 Port와 Username도 함께 입력한 후에 [Test Connection]을 클릭해 문제없이 연결되는지 확인합니다.

{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_public_domain_07.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud Cloud DB for MySQL 생성후 Public 도메인으로 접속하는 방법&quot; caption=&quot;&quot; %}

DB 서버 접속 후에 Database를 확인해보면 처음 Cloud DB for MySQL을 생성할 때 설정한 test Database가 존재하는 것을 확인할 수 있습니다.

{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_public_domain_08.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud Cloud DB for MySQL 생성후 Public 도메인으로 접속하는 방법&quot; caption=&quot;&quot; %}



## 기타

### DB 서버 상세보기
DB 서버 상세보기 메뉴에서는 [Process list], [Variables], [Status], [Database 관리], [DB Config 관리], [DB User 관리], [Backup 설정 관리], [DB Server Logs] 등을 확인할 수 있습니다.

{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_16.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud Cloud DB for MySQL 생성후 Public 도메인으로 접속하는 방법&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;database/ncp_database_cloud_db_for_mysql_17.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud Cloud DB for MySQL 생성후 Public 도메인으로 접속하는 방법&quot; caption=&quot;&quot; %}


## 참고 URL
1. Cloud DB for MySQL 기본 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/database-database-5-6&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/database-database-5-6&lt;/a&gt;

2. Cloud DB 서버 외부 접근 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/database-database-5-10&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/database-database-5-10&lt;/a&gt;
</description>
            <pubDate></pubDate>
            <link>https://docs.3rdeyesys.com/database/ncloud_database_cloud_db_for_mysql_public_domain_guide.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/database/ncloud_database_cloud_db_for_mysql_public_domain_guide.html</guid>
            
            <category>database</category>
            
            <category>mysql</category>
            
            <category>clouddb</category>
            
            <category>vpc</category>
            
            
        </item>
        
        <item>
            <title>Cloud Log Analytics에서 수집하는 로그 유형</title>
            <description>## 개요
Cloud Log Analytics는 네이버 클라우드 플랫폼의 여러 서비스에서 발생하는 다양한 로그들을 한 곳에 모아 저장하고 손쉽게 분석하게 해주는 서비스입니다.

## 로그 템플릿 종류
Cloud Log Analytics에서 수집하는 각 종 서비스의 로그 템플릿 종류는 다음과 같습니다.

- Server syslog
- Apache 로그(Access log, Apache Error Log)
- MySQL 설치형 상품의 로그(Error Log, Slow Log)
- Microsoft SQL Server 설치형 상품의 Error Log
- Tomcat 로그(Catalina Log)
- Windows 서버의 Event Log
- Windows 서버의 각종 text 형식의 로그
- Cloud DB for MySQL 로그
- Cloud DB for MSSQL 로그
- Cloud DB for MongoDB 로그
- Application Server Launcher 로그
- Application Load Balancer 로그
- Search Engine Service 로그
- Cloud Data Streaming Service 로그
- Bare Metal Server 로그
- 그외 템플릿으로 제공되지 않는 로그도 Custom Log 기능으로 직접 대상 로그를 지정해서 수집할 수 있습니다


## 로그 보관 기간
로그 데이터의 **보관 기간은 30일**로, 30일이 지난 데이터는 자동 삭제되며, 사전에 별도로 통지하지 않습니다.


## 참고 URL
&lt;a href=&quot;https://guide.ncloud-docs.com/docs/cla-cla-1-1&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/cla-cla-1-1.html&lt;/a&gt;</description>
            <pubDate></pubDate>
            <link>https://docs.3rdeyesys.com/analytics/ncloud_analytics_cloud_log_analytics_info.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/analytics/ncloud_analytics_cloud_log_analytics_info.html</guid>
            
            <category>log</category>
            
            <category>analytics</category>
            
            
        </item>
        
    </channel>
</rss>
