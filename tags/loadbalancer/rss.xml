<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Loadbalancer on 써드아이시스템 기술문서</title>
    <link>https://docs.3rdeyesys.com/tags/loadbalancer/</link>
    <description>Recent content in Loadbalancer on 써드아이시스템 기술문서</description>
    <generator>Hugo 0.124.0</generator>
    <language>ko-kr</language>
    <lastBuildDate>Fri, 17 Nov 2023 00:00:00 +0900</lastBuildDate>
    <atom:link href="https://docs.3rdeyesys.com/tags/loadbalancer/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Load Balancer에 연동된 NginX에서 Client IP 기록하고 확인하는 방법</title>
      <link>https://docs.3rdeyesys.com/docs/compute/nginx/client-ip-logging-in-loadbalancer-guide/</link>
      <pubDate>Tue, 23 May 2023 00:00:00 +0900</pubDate>
      <guid>https://docs.3rdeyesys.com/docs/compute/nginx/client-ip-logging-in-loadbalancer-guide/</guid>
      <description>개요 linkNcloud (네이버 클라우드)에서 Load Balancer에 연동된 NginX 웹서버를 사용할 때 Load Balancer IP가 아닌 실제 Client IP를 기록하고 확인하는 방법을 알아보겠습니다. 결론부터 이야기 하자면 NginX에서는 Apache와 달리 별도의 모듈 설치나 환경 설정 파일 수정 없이도 자동으로 실제 Client IP와 Load Balancer IP가 동시에 모두 기록됩니다. 어떻게 기록되는지 테스트 결과를 보면서 확인해보겠습니다.&#xA;테스트 환경 link&#xD;⁃ Server-1: CentOS 7.8 ⁃ Server-2: Ubuntu 20.04 ⁃ NginX: NginX 1.23.1 서버 준비 linkNcloud 콘솔에서 CentOS 7.</description>
    </item>
    <item>
      <title>X-Forwarded-For를 이용해 Proxy, Load Balancer 환경에서 Client IP 기록하기</title>
      <link>https://docs.3rdeyesys.com/docs/compute/x-forwarded-for/client-ip-logging-in-linux-apache-guide/</link>
      <pubDate>Mon, 21 Aug 2023 00:00:00 +0900</pubDate>
      <guid>https://docs.3rdeyesys.com/docs/compute/x-forwarded-for/client-ip-logging-in-linux-apache-guide/</guid>
      <description>개요 linkX-Forwarded-For (XFF) 는 HTTP Header 중 하나로 Load Balancer(로드밸런서)나 Proxy Server를 통해 웹서버에 접속하는 Client의 IP 주소를 식별하는 표준 헤더입니다.&#xA;웹서버나 WAS 앞쪽에 Load Balancer 혹은 Proxy Server 등이 위치하게 된다면 서버 접근 로그에는 Client IP가 아닌 Load Balancer 혹은 Proxy Server의 IP 주소가 기록됩니다. 이때 웹 어플리케이션에서 X-Forwarded-For 헤더를 이용하면 Client IP를 서버 접근 로그에 남길 수 있습니다.&#xA;여기서는 Load Balancer와 연동된 CentOS와 Ubuntu, 그리고 Rocky Linux의 Apache 웹서버 환경에서 X-Forwarded-For 를 이용하여 Apache access_log에 Clinet의 IP를 저장하는 과정을 살펴보겠습니다.</description>
    </item>
    <item>
      <title>IIS에서 X-Forwarded-For를 이용해 Client IP 기록하기</title>
      <link>https://docs.3rdeyesys.com/docs/compute/x-forwarded-for/client-ip-logging-in-windows-iis-guide/</link>
      <pubDate>Fri, 17 Nov 2023 00:00:00 +0900</pubDate>
      <guid>https://docs.3rdeyesys.com/docs/compute/x-forwarded-for/client-ip-logging-in-windows-iis-guide/</guid>
      <description>개요 linkX-Forwarded-For (XFF) 는 HTTP Header 중 하나로 Load Balancer(로드밸런서)나 Proxy Server를 통해 웹서버에 접속하는 Client의 IP 주소를 식별하는 표준 헤더입니다.&#xA;웹서버나 WAS 앞쪽에 Load Balancer 혹은 Proxy Server 등이 위치하게 된다면 서버 접근 로그에는 Client IP가 아닌 Load Balancer 혹은 Proxy Server의 IP 주소가 기록됩니다. 이때 웹 어플리케이션에서 X-Forwarded-For 헤더를 이용하면 Client IP를 서버 접근 로그에 남길 수 있습니다.&#xA;여기서는 Load Balancer와 연동된 Windows Server의 IIS에서 X-Forwarded-For를 이용해 IIS(Internet Information Services) Log에 Clinet의 IP를 기록하는 과정을 살펴보겠습니다.</description>
    </item>
    <item>
      <title>Cloud DB for MySQL 읽기 부하 로드밸런서로 분산시키는 방법 | Classic</title>
      <link>https://docs.3rdeyesys.com/docs/database/cloud-db-mysql/load-balance/classic-lb/</link>
      <pubDate>Wed, 20 Jul 2022 00:00:00 +0900</pubDate>
      <guid>https://docs.3rdeyesys.com/docs/database/cloud-db-mysql/load-balance/classic-lb/</guid>
      <description>개요 linkMySQL DB서버의 부하를 줄이기 위해 보통 읽기 전용 DB서버를 생성하게 되는데, 읽기 전용 서버를 여러대 생성해서 로드밸런서(Load Balancer)로 연결하면 읽기 부하를 분산 시키고 좀 더 안정적인 서비스가 가능해집니다.&#xA;여기서는 Ncloud (네이버 클라우드) Classic 환경에서 관리형 DB인 Cloud DB for MySQL의 읽기 전용 Slave DB를 로드밸런서에 연결하고 제대로 부하가 분산되는지 확인해보겠습니다.&#xA;사전 준비 linkDB 접속과 부하 분산을 테스트할 서버가 필요합니다. 여기서는 CentOS 7.8 서버를 준비했습니다.&#xA;DB 서버 생성 link우선 [Cloud DB for MySQL] - [DB Server]에서 DB를 생성합니다.</description>
    </item>
    <item>
      <title>Cloud DB for MySQL 읽기 부하를 네트워크 로드밸런서로 분산시키는 방법 | VPC</title>
      <link>https://docs.3rdeyesys.com/docs/database/cloud-db-mysql/load-balance/vpc-network-lb/</link>
      <pubDate>Mon, 08 Aug 2022 00:00:00 +0900</pubDate>
      <guid>https://docs.3rdeyesys.com/docs/database/cloud-db-mysql/load-balance/vpc-network-lb/</guid>
      <description>개요 linkMySQL DB서버의 부하를 줄이기 위해 보통 읽기 전용 DB서버를 생성하게 되는데, 읽기 전용 서버를 여러대 생성해서 로드밸런서(Load Balancer)로 연결하면 읽기 부하를 분산 시키고 좀 더 안정적인 서비스가 가능해집니다.&#xA;여기서는 Ncloud (네이버 클라우드) VPC 환경에서 관리형 DB인 Cloud DB for MySQL의 읽기 전용 Slave DB를 네트워크 로드밸런서(Network Load Balancer)에 연결하고 제대로 부하가 분산되는지 확인해보겠습니다.&#xA;사전 준비 linkDB 접속과 부하 분산을 테스트할 서버가 필요합니다. 여기서는 CentOS 7.8 서버를 준비했습니다.&#xA;DB 서버 생성 link우선 [Cloud DB for MySQL] - [DB Server]에서 DB를 생성합니다.</description>
    </item>
    <item>
      <title>Cloud DB for MySQL 읽기 부하를 네트워크 프록시 로드밸런서로 분산시키는 방법 | VPC</title>
      <link>https://docs.3rdeyesys.com/docs/database/cloud-db-mysql/load-balance/vpc-network-proxy-lb/</link>
      <pubDate>Mon, 08 Aug 2022 00:00:00 +0900</pubDate>
      <guid>https://docs.3rdeyesys.com/docs/database/cloud-db-mysql/load-balance/vpc-network-proxy-lb/</guid>
      <description>개요 linkMySQL DB서버의 부하를 줄이기 위해 보통 읽기 전용 DB서버를 생성하게 되는데, 읽기 전용 서버를 여러대 생성해서 로드밸런서(Load Balancer)로 연결하면 읽기 부하를 분산 시키고 좀 더 안정적인 서비스가 가능해집니다.&#xA;여기서는 Ncloud (네이버 클라우드) VPC 환경에서 관리형 DB인 Cloud DB for MySQL의 읽기 전용 Slave DB를 네트워크 프록시 로드밸런서(Network Proxy Load Balancer)에 연결하고 제대로 부하가 분산되는지 확인해보겠습니다.&#xA;사전 준비 linkDB 접속과 부하 분산을 테스트할 서버가 필요합니다. 여기서는 CentOS 7.8 서버를 준비했습니다.</description>
    </item>
  </channel>
</rss>